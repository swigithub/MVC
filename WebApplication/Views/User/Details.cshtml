@using SWI.Libraries.Security.Entities
@model Sec_User

@{
    ViewBag.Title = "User Details";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}


@if (Model != null)
{
    <div class="row">
        <div class="col-md-3">

            <div class="box box-primary ">
                <div class="box-body box-profile">
                    <img class="profile-user-img img-responsive img-circle" src="@Model.Picture" alt="User profile picture">

                    <h3 class="profile-username text-center">@Model.UserName</h3>

                    <p class="text-muted text-center">Software Engineer</p>

                    <ul class="list-group list-group-unbordered">
                        <li class="list-group-item">
                            <b>Name</b> <a class="pull-right">@Model.FirstName @Model.LastName</a>
                        </li>
                        <li class="list-group-item">
                            <b>Email</b> <a class="pull-right">@Model.Email</a>
                        </li>
                        <li class="list-group-item">
                            <b>Contact</b> <a class="pull-right">@Model.Contact</a>
                        </li>
                        <li class="list-group-item">
                            <b>Address</b> <a class="pull-right">@Model.Address</a>
                        </li>
                        
                    </ul>

                    <!--    <a href="#" class="btn btn-primary btn-block"><b>Follow</b></a>-->
                </div>
            </div>

        </div>
        <div class="col-md-9">
            <div class="nav-tabs-custom">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#Profile" data-toggle="tab">Profile</a></li>
                    <li><a href="#pan-password" data-toggle="tab">Change Password</a></li>
                </ul>
                <div class="tab-content">
                    <div class="active tab-pane" id="Profile">
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-6">
                                @using (Html.BeginForm("New", "User", new { type = "update" }, FormMethod.Post, new { id = "frm-User", enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    <div class="form-horizontal">
                                        <div class="form-group">
                                            @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.HiddenFor(m => m.UserId)
                                                @Html.HiddenFor(m => m.RoleId, new { value = Model.RoleId })
                                                @Html.HiddenFor(m => m.UserName, new { value = Model.UserName })
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", required = "required", data_parsley_type = "email" } })
                                                <span id="EmailMsg" style="color: #B94A48 "></span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", required = "required" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            <div class="col-md-2"></div>
                                            <div class="col-md-10">
                                                <div id="imagePreview"><img src="@Model.Picture" height="140" width="140" /> </div>
                                                <input id="uploadFile" type="file" accept="image/*" name="image" class="img" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-offset-2 col-sm-10">
                                                <button type="submit" class="btn btn-danger">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <!-- /.tab-pane -->
                    <div class="tab-pane" id="pan-password">
                        <div class="row">
                            <div class="col-md-1"></div>
                            <div class="col-md-6">
                                <div class="alert alert-success alert-dismissible" id="msg">
                                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                    <div id="pan-msg"></div>
                                </div>
                                @using (Html.BeginForm("UpdatePassword", "User", FormMethod.Post, new { id = "frm-password", enctype = "multipart/form-data" }))
                                {
                                    @Html.HiddenFor(m => m.UserId)
                                    @Html.AntiForgeryToken()
                                    <div class="form-horizontal">
                                        <!--Password-->
                                        <div class="form-group ">
                                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.Password("Password", null, new { @class = "form-control", required = "required" })
                                            </div>
                                        </div>
                                        <!--Confirm Password-->

                                        <div class="form-group">
                                            @Html.Label("Confirm Password", htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.Password("ConfirmPassword", null, new { @class = "form-control", required = "required", data_parsley_equalto = "#Password" })<!-- data_required_message = "Confirm Password not match" -->
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-sm-offset-2 col-sm-10">
                                                <button type="reset" id="btn-reset" class="btn btn-default">Reset</button>

                                                <button type="submit" class="btn btn-danger">Save</button>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                    </div>
                    <!-- /.tab-pane -->
                    <!-- /.tab-pane -->
                </div>
                <!-- /.tab-content -->
            </div>
            <!-- /.nav-tabs-custom -->
        </div>
        <!-- /.col -->
    </div>
}




@section scripts{
<script src="~/Content/js/Plugins/validation/parsley.min.js"></script>
    <script src="~/Content/js/user-details.js"></script>
   
}


@section style{
<link href="~/Content/js/Plugins/validation/parsley.css" rel="stylesheet" />
<link href="~/Content/box.css" rel="stylesheet" />
    <style>
        #imagePreview {
            width: 140px;
            height: 140px;
            background-position: center center;
            background-size: cover;
            -webkit-box-shadow: 0 0 1px 1px rgba(0, 0, 0, .3);
            display: inline-block;
        }
    </style>
}

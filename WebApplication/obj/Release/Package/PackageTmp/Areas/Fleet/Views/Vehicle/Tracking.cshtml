@{
    ViewBag.Title = "Tracking";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<script src="~/Content/js/Plugins/notify/js/notify.js"></script>
<link href="~/Content/js/Plugins/notify/css/notify.css" rel="stylesheet" />
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=@(ViewBag.ApiMapKey)&libraries=geometry&bogusParam=.js"></script>
<script src="~/Content/js/Plugins/kml/js/geoxml3.js"></script>
<script src="~/Content/js/Plugins/kml/js/ProjectedOverlay.js"></script>
<script src="~/Content/js/GoogleMapsNTL.js"></script>


<link href="~/Styles/tabulator/tabulator.min.css" rel="stylesheet" />
<script src="~/Styles/tabulator/tabulator.min.js"></script>


<link href="~/Scripts/datatable/datatable.css" rel="stylesheet" />
<script src="~/Scripts/datatable/datatable.js"></script>
<script src="https://raw.githubusercontent.com/l-lin/font-awesome-animation/master/dist/font-awesome-animation.min.css"></script>

<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>

<link href="~/Styles/switch/switch.css" rel="stylesheet" />

<script>
    var table, table_e,table_Trip,AssetName_regNo;
    $(window).on("load", function () {
         table = $('#position_table').DataTable({
            "dom": '<"top">rt',
            "scrollY": "200px",
            "scrollX": true,
             paging :false,
        });

         table_e = $('#events_table').DataTable({
            "dom": '<"top">rt',
            "scrollY": "200px",
            "scrollX": true,
            lengthChange: false,
            ordering: true,
            paging: false,
         });

         table_fence = $("#fence_table").DataTable({
             "dom": '<"top">rt',            
             lengthChange: false,
             ordering: true,
             paging: false,
         });

         table_Trip = $("#trip_table").DataTable({
             "dom": '<"top">rt',            
             lengthChange: false,
             ordering: true,
             paging: false,
         });
        

        $('.dataTables_empty').remove();
        var EmptyRowHTML = '<tr><td valign="top" colspan="23" class="dataTables_empty">No data available.</td></tr>';
        var EmptyRowHTMLEvent = '<tr><td valign="top" colspan="12" class="dataTables_empty">No data available.</td></tr>';
        var EmptyRowHTMFence = '<tr><td valign = "top" colspan= "9" class ="dataTables_empty">No data available.</td></tr>"';
        var EmptyRowHTMLTrip = '<tr><td valign = "top" colspan= "11" class ="dataTables_empty">No data available.</td></tr>"';
        $('#position_table').find('tbody').append(EmptyRowHTML);
        $('#events_table').find('tbody').append(EmptyRowHTMLEvent);
        $('#fence_table').find('tbody').append(EmptyRowHTMFence);
        $('#trip_table').find('tbody').append(EmptyRowHTMLTrip);
    
    });

    function UpdateHeight() {
        let h1 = $("#live-track").innerHeight();
        let h2 = $("#live-track .fleet-nav").innerHeight();
        let h3 = $("#live-track .active .dataTables_scrollHead").innerHeight();
        let h = h1 - (h2 + h3);
        $("#live-track .active .dataTables_scrollBody").css("height", h);
    }

    function UpdateHeightReplay() {
        let h1 = $("#replay-track").innerHeight();
        let h2 = $("#replay-track .fleet-nav").innerHeight();
        let h3 = $("#replay-track .active .dataTables_scrollHead").innerHeight();
        let h = h1 - (h2 + h3);
        $("#replay-track .active .dataTables_scrollBody").css("height", h);
    }

    $("body").on("mouseup", ".splitter-bar", function () {
        UpdateHeight();
        UpdateHeightReplay();
    });

    $("body").on("click", ".fleet-nav li a", function () {
        setTimeout(function () {
            UpdateHeight();
            UpdateHeightReplay();
        },10);
    });
    $("body").one("click", ".fleet-nav li a", function () {
        setTimeout(function () {
            table_e.draw();
        }, 5);
    });

    function IsNull(data) {
        if (data == "" || data == null) {
            return '';
        } else {
            return '<div style="text-align: center; color:green"><i class="fa fa-check"></i></div>';
        }
    }
</script>


<script>

    var KMLState;
    var table_position, table_events;
    var IMEICollection = [];
    var prevsrc;
    var SerialNo;
    function updateMap(bearing, src, status) {
        debugger;
        var newsrc;
        if (status == "green") {
            var srcId = src.split("#");
            $('img[src="' + src + '"]').attr('src', "/Content/Images/Vehicles/dashboard/car-image.png" + "#" + srcId[1]);
            prevsrc = "/Content/Images/Vehicles/dashboard/car-image.png";
            newsrc = "/Content/Images/Vehicles/dashboard/car-image.png" + "#" + srcId[1];
            src = newsrc;
            console.log("green");
        }
        else if (status == "red") {

            var srcId = src.split("#");
            $('img[src="' + src + '"]').attr('src', "/Content/Images/Vehicles/dashboard/car-imagered.png" + "#" + srcId[1]);
            prevsrc = "/Content/Images/Vehicles/dashboard/car-imagered.png";
            newsrc = "/Content/Images/Vehicles/dashboard/car-imagered.png" + "#" + srcId[1];
            src = newsrc;
            console.log("red");
        }
        else if (status == "yellow") {

            var srcId = src.split("#");
            $('img[src="' + src + '"]').attr('src', "/Content/Images/Vehicles/dashboard/car-imageyellow.png" + "#" + srcId[1]);
            prevsrc = "/Content/Images/Vehicles/dashboard/car-imageyellow.png";
            newsrc = "/Content/Images/Vehicles/dashboard/car-imageyellow.png" + "#" + srcId[1];
            src = newsrc;
            console.log("yellow");
        }
        else {
            var srcId = src.split("#");
            $('img[src="' + src + '"]').attr('src', "/Content/Images/Vehicles/dashboard/car-image.png" + "#" + srcId[1]);

            newsrc = "/Content/Images/Vehicles/dashboard/car-image.png" + "#" + srcId[1];
            src = newsrc;
            console.log("green");
        }
        console.log('bearing:' + bearing + '| src:' + src);
        console.log(src);
        $('img[src="'+src+'"]').css({
            'transform': 'rotate(' + bearing + 'deg)'
        });
    }
    function checkArrLength(arr) {
        var counter = [];
        for (var i = 0; i < arr.length; i++) {
            var value = arr[i];
            if (value != null) {
                counter.push(value);
            }
        }
        return counter.length;
    }
    
    function KMLDetailsF(KMLDetails) {
                
        if (KMLDetails != undefined) {

            var tableData = [];
            var tableEventData = [];
            var DistanceCovered = [];
            var AverageSpeed = [];
            console.log('KMLDetails:' + KMLDetails.length);
            $('#position_table').find('tbody').empty();
            $('#events_table').find('tbody').empty();
            $('#fence_table').find('tbody').empty();
            $('#trip_table').find('tbody').empty();
            
            table.clear();
            table_e.clear();
            table_fence.clear();
            table_Trip.clear();
            table.destroy();
            table_e.destroy();
            table_fence.destroy();
            table_Trip.destroy();

            $(KMLDetails).each(function (Index, Key) {
                
                DistanceCovered.push(Key.Odometer);
                if (Key.Speed!=0) {
                    AverageSpeed.push(Key.Speed);
                }
                
                var KMLSignal = '<div style="text-align: center; color:green"><i class="fa fa-circle"></i></div>';
                if (Key.GPSSignalStatus=="invalid") {
                    KMLSignal = '<div style="text-align: center; color:red"><i class="fa fa-circle"></i></div>';
                }
                var KMLTr = '<tr>' +
                                '<td>' + KMLSignal + '</td>' +
                                '<td>' + '' + '</td>'+
                                '<td>' + '' + '</td>' +                                
                                '<td>' + ConvertTime(Key.UTCTimeAndDate, 'KML') + '</td>' +
                                //'<td>' + '' + '</td>' +
                                //'<td>' + '' + '</td>' +
                                //'<td>' + Key.DeviceState + '</td>' +
                                //'<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                //'<td>' + Key.ExtendState + '</td>' +
                                //'<td>' + Key.Address + '</td>' +
                                '<td>' + Key.Speed.toFixed(2) + '</td>' +
                                '<td>' + Key.Odometer + '</td>' +
                                '<td>' + Key.FuelConsumedPercentage + '</td>' +
                                '<td>' + Key.CurrentTripFuelConsumed + '</td>' +
                                '<td>' + Key.Temperature + '</td>' +
                                '<td>' + Key.GPSSignalStatus + '</td>' +
                                '<td>' + Key.GSMSignal + '</td>' +
                                '<td>' + Key.Direction + '</td>' +
                                '<td>' + Key.Rotaion + '</td>' +
                                '<td>' + Key.Latitude + '</td>' +
                                '<td>' + Key.Longitude + '</td>' +                                                                                               
                                '<td>' + Key.Altitude + '</td>' + 
                            '</tr>';


                var KMLTrEvent = '<tr>' +
                                '<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                '<td>' + ConvertTime(Key.UTCTimeAndDate, 'KML') + '</td>' +
                                //'<td>' + '' + '</td>' +
                                //'<td>' + '' + '</td>' +
                                //'<td>' + '' + '</td>' +
                                //'<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                '<td>' + '' + '</td>' +
                                //'<td>' + '' + '</td>' +
                                '<td>' + Key.Speed.toFixed(2) + '</td>' +
                                '<td>' + Key.Odometer + '</td>' +
                                //'<td>' + Key.FuelConsumedPercentage + '</td>' +
                                //'<td>' + Key.CurrentTripFuelConsumed + '</td>' +
                                //'<td>' + Key.Temperature + '</td>' +
                                //'<td>' + Key.GPSSignalStatus + '</td>' +
                                //'<td>' + Key.GSMSignal + '</td>' +
                                // '<td>' + Key.Direction + '</td>' +
                                //'<td>' + Key.Rotaion + '</td>' +
                                '<td>' + Key.Latitude + '</td>' +
                                '<td>' + Key.Longitude + '</td>'+
                                //'<td>' + IsNull(Key.ObjInpOutStatus.OutLockthedoor) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.OutUnlockthedoor) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.InDoorOpenClose) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.InUnlockDoor) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.OutSirenSound) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.OutRelyToStopCar) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.InSOS) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.InAntiTemper) + '</td>' +
                                //'<td>' + IsNull(Key.ObjInpOutStatus.InEngineOnOff) + '</td>' +
                            '</tr>';
                $('#position_table').find('tbody').append(KMLTr);
                $('#events_table').find('tbody').append(KMLTrEvent);
                //tableData.push({ Signal: Key.GPSSignalStatus, Speed: Key.Speed, Mileage: Key.Odometer, Direction: Key.Direction, Rotation: Key.Rotation, Altitude: Key.Altitude, DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
                //tableEventData.push({ DoorLocked: IsNull(Key.ObjInpOutStatus.OutLockthedoor), SirenSound: IsNull(Key.ObjInpOutStatus.OutSirenSound), DoorUnlocked: IsNull(Key.ObjInpOutStatus.OutUnlockthedoor), CarStopRelay: IsNull(Key.ObjInpOutStatus.OutRelyToStopCar), SOS: IsNull(Key.ObjInpOutStatus.InSOS), AntiTemper: IsNull(Key.ObjInpOutStatus.InAntiTemper), IsDoorOpen: IsNull(Key.ObjInpOutStatus.InDoorOpenClose), IsDoorUnlock: IsNull(Key.ObjInpOutStatus.InUnlockDoor), EngineStatus: IsNull(Key.ObjInpOutStatus.InEngineOnOff), DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
            });



            table = $('#position_table').DataTable({
                "dom": '<"top">rt',
                "scrollY": "200px",
                "scrollX": true,
                paging:false,
            });

            table_e = $('#events_table').DataTable({
                "dom": '<"top">rt',
                "scrollY": "200px",
                "scrollX": true,
                lengthChange: false,
                ordering: true,
                paging: false,
            });

            table_fence = $("#fence_table").DataTable({
                "dom": '<"top">rt',
                "scrollY": "200px",
                "scrollX": true,
                lengthChange: false,
                ordering: true,
                paging: false,
            });

            table_Trip = $("#trip_table").DataTable({
                "dom": '<"top">rt',
                "scrollY": "200px",
                "scrollX": true,
                lengthChange: false,
                ordering: true,
                paging: false,
            });
      
            //console.log('current data:' + JSON.stringify(tableEventData));
            //table_position.setData(tableData);
            //table_events.setData(tableEventData);
            
            /* Calculate Distance */
            var MaxDistance = Math.max(...DistanceCovered);
            var MinDistance = Math.min(...DistanceCovered);

            var ResultantDistance = MaxDistance - MinDistance;

            /* Calculate Average Speed */

            const AverageFormula = arr => arr.reduce((p, c) => p + c, 0) / arr.length;
            const ResultantAverage = Math.round(AverageFormula(AverageSpeed));

            $('#AverageSpeed').text(ResultantAverage);
            $('#DistanceCovered').text(ResultantDistance);
        }
    }

$(window).on("load", function () {
//var tableData = [
//    { name: "Billy Bob", age: "12", gender: "male", height: 1, col: "red", dob: "", cheese: 1 },
//    { name: "Mary May", age: "1", gender: "female", height: 2, col: "blue", dob: "14/05/1982", cheese: true },
//    { name: "Christine Lobowski", age: "42", height: 0, col: "green", dob: "22/05/1982", cheese: "true" },
//    { name: "Brendon Philips", age: "125", gender: "male", height: 1, col: "orange", dob: "01/08/1980" },
//    { name: "Margret Marmajuke", age: "16", gender: "female", height: 5, col: "yellow", dob: "31/01/1999" },
//    { name: "Billy Bob", age: "12", gender: "male", height: 1, col: "red", dob: "", cheese: 1 },
//    { name: "Mary May", age: "1", gender: "female", height: 2, col: "blue", dob: "14/05/1982", cheese: true },
//    { name: "Christine Lobowski", age: "42", height: 0, col: "green", dob: "22/05/1982", cheese: "true" },
//    { name: "Brendon Philips", age: "125", gender: "male", height: 1, col: "orange", dob: "01/08/1980" },
//    {  name: "Margret Marmajuke", age: "16", gender: "female", height: 5, col: "yellow", dob: "31/01/1999" },
//]

    //var signalIcon = function (cell, formatterParams) { //plain text value
    //    if (cell.getValue() != "invalid") {
    //        return '<div style="text-align: center; color:green"><i class="fa fa-circle"></i></div>'; //+ cell.getValue();
    //    }
    //    else {
    //        return '<div style="text-align: center; color:red"><i class="fa fa-circle"></i></div>'; //+ cell.getValue();
    //    }
    //};

    //var eventIcon = function (cell, formatterParams) { //plain text value
        
    //    if (cell.getValue() == "true") {
    //        console.log('cell.getValue():' + cell.getValue());
    //        return '<div style="text-align: center; color:green"><i class="fa fa-check"></i></div>'; //+ cell.getValue();
    //    }
    //    else {
    //        console.log('cell.getValue(): False');
    //        return ''; //+ cell.getValue();
    //    }
    //};


    //table_position = new Tabulator(".tabulator_position", {
    //    layout: "fitDataFill",
    //    responsiveLayout: "collapse",
    //    autoResize: true,
    //    movableColumns: false,
    // columns: [
    //    { title: "", formatter: signalIcon, field: "Signal" },
    //    { title: "TimeStamp", field: "DateTime" },
    //    { title: "Latitude", field: "Latitude" },
    //    { title: "Longitude", field: "Longitude" },
    //    { title: "Direction", field: "Direction" },
    //    { title: "Rotation", field: "Rotation" },
    //    { title: "Altitude", field: "Altitude" },
    //    { title: "Mileage", field: "Mileage" },
    //    { title: "Speed", field: "Speed" }      
    //],
    //});

    //table_events = new Tabulator(".tabulator_events", {
    //    layout: "fitDataFill",
    //    responsiveLayout: "collapse",
    //    autoResize: true,
    //    movableColumns: false,
    //    columns: [
    //        { title: "TimeStamp", field: "DateTime" },
    //        { title: "Latitude", field: "Latitude" },
    //        { title: "Longitude", field: "Longitude" },
    //        { title: "Door Locked", formatter: eventIcon, field: "DoorLocked" },
    //        { title: "Door Unlocked", formatter: eventIcon, field: "DoorUnlocked" },
    //        { title: "Door Open", formatter: eventIcon, field: "IsDoorOpen" },
    //        { title: "Door Unlock", formatter: eventIcon, field: "IsDoorUnlock" },
    //        { title: "Siren Sound", formatter: eventIcon, field: "SirenSound" },
            
    //        { title: "Car Stop Relay", formatter: eventIcon, field: "CarStopRelay" },
    //        { title: "SOS", formatter: eventIcon, field: "SOS" },
    //        { title: "AntiTemper", formatter: eventIcon, field: "AntiTemper" },
            
    //        { title: "EngineStatus", formatter: eventIcon, field: "EngineStatus" }
    //    ],
    //});

//table.setData(tableData);
});
</script>


<script>

    /* == Date Converter from DB to Front-End == */
    function ConvertDate(mydate) {
        var dsdate = new Date(parseInt(mydate.substr(6)));
        var month = dsdate.getMonth() + 1;
        var day = dsdate.getDate();
        var year = dsdate.getFullYear();
        var formatdate2 = month + "/" + day + "/" + year
        return formatdate2;
    }

    

    function ConvertTime(mydate, status) {
        var dsdate;
        if (status == 'live') {
            dsdate = new Date(mydate);
        } else {
            dsdate = new Date(parseInt(mydate.substr(6)));
        }
        //console.log('mydate:' + mydate);
        //var dsdate = new Date(parseInt(mydate.substr(6)));
        //var dsdate = new Date(mydate);
        var Hour = dsdate.getHours();
        var Min = dsdate.getMinutes();
        var Sec = dsdate.getSeconds();
        var Msec = dsdate.getMilliseconds();

        var FinalTime = Hour + ":" + Min + ":" + Sec + ":" + Msec
        //console.log('mydate:' + FinalTime);
        return FinalTime;
    }

    var VehicleIdentityNoObj;    
    function RefreshDriverWidget(Lat, Lng, Speed, Odometer, Direction, Rotaion, GPS, Altitude) {
        $('#WLatitude').text(Lat.toFixed(5));
        $('#WLongitude').text(Lng.toFixed(5));
        $('#WDirection').text(Rotaion + ' | ' + Altitude);
        $('#WSpeed').text(Speed.toFixed(2));
        $("#WVehicleDirectionIcon").css("transform", "rotate(" + Direction + "deg)");
        $('#WMileage').text(Odometer);
        if (GPS == "Valid") {
            $('#WVehicleGPSIcon').attr('src', "/Content/Images/Vehicles/dashboard/activeCar.png")
        } else {
            $('#WVehicleGPSIcon').attr('src', "/Content/Images/Vehicles/dashboard/deactiveCar.png")
        }
 
    }
    /* == Bottom Panel Logs in Live State by SignalR == */
    var tableDataLog = [];
    var tableEventDataLog = [];
    var DistanceCoveredG = [];
    var AverageSpeedG = [];

    //live
    function SetBottomPanelData(GPSSignalStatus, AssetName, DeviceID, SimCardNo, OwnerName, DeviceState, AssetStatus, AlarmState, ExtendState, Address, Speed, Odometer, Direction, Rotation, Altitude, UTCTimeAndDate, Latitude, Longitude, DoorLocked, SirenSound, DoorUnlocked, CarStopRelay, SOS, AntiTemper, IsDoorOpen, IsDoorUnlock, EngineStatus, FuelConsumedPercentage, CurrentTripFuelConsumed, Temperature, GPSSignalStatus, GSMSignal, Alarms, Track) {
    
        var StatusImage = '';
     
        $('.dataTables_empty').remove();

        if (GPSSignalStatus == "invalid") {
            StatusImage = '<i class="fas fa-circle" style="color: red;"></i> '
        } else {
            StatusImage = '<i class="fas fa-circle" style="color: green;"></i> '
        }

        DistanceCoveredG.push(Odometer);
        AverageSpeedG.push(Speed);

        /* Calculate Distance */
        var MaxDistance = Math.max(...DistanceCoveredG);
        var MinDistance = Math.min(...DistanceCoveredG);

        var ResultantDistance = MaxDistance - MinDistance;
        console.log('LiveResultantDistance:' + ResultantDistance);
        /* Calculate Average Speed */

        const AverageFormula = arr => arr.reduce((p, c) => p + c, 0) / arr.length;
        const ResultantAverage = Math.round(AverageFormula(AverageSpeedG));

        $('#AverageSpeed').text(ResultantAverage);
        $('#DistanceCovered').text(ResultantDistance);

        var KMLSignal = '<div style="text-align: center; color:green"><i class="fa fa-circle"></i></div>';
        if (GPSSignalStatus == "invalid") {
            KMLSignal = '<div style="text-align: center; color:red"><i class="fa fa-circle"></i></div>';
        }
        
        //var KMLTr = '<tr>' +
        //                        '<td>' + KMLSignal + '</td>' +
        //                        '<td>' + ConvertTime(UTCTimeAndDate,'live') + '</td>' +
        //                        '<td>' + Latitude + '</td>' +
        //                        '<td>' + Longitude + '</td>' +
        //                        '<td>' + Speed + '</td>' +
        //                        '<td>' + Rotation + '</td>' +
        //                        '<td>' + Direction + '</td>' +
        //                        '<td>' + Odometer + '</td>' +
        //                        '<td>' + Altitude + '</td>' +  
        //                    '</tr>';

        var AlarmStat = "Inactive";

        if (Alarms != null || Alarms != undefined )
        {
            if (Alarms.length != 0)
            {
                AlarmStat = "Active";
            }            
        }

        var AlarmStatus =
        table.row.add([
           KMLSignal,
           AssetName,
           DeviceID,
           ConvertTime(UTCTimeAndDate, 'live'),
           //SimCardNo,
           //OwnerName,
           //DeviceState,
           //AssetStatus,
           AlarmStat,
           //ExtendState,
           //Address,
           Speed.toFixed(2),
           Odometer,
           FuelConsumedPercentage,
           CurrentTripFuelConsumed.toFixed(2),
           Temperature,
           GPSSignalStatus,
           GSMSignal,
           Direction,
           Rotation,
           Latitude.toFixed(6),
           Longitude.toFixed(6),
           Altitude,
        ]).draw(false);

        if (Alarms != null || Alarms != undefined) {
            Alarms.forEach(function (e, i) {
                table_e.row.add([
                AssetName,
                DeviceID,
                ConvertTime(UTCTimeAndDate, 'live'),
                //SimCardNo,
                //OwnerName,
                //DeviceState,
                //AssetStatus,
                e.Description,
                e.Status,
                e.CurrentVal,
                e.ThresholdVal,
                //Address,
                Speed.toFixed(2),
                Odometer,
                //FuelConsumedPercentage,
                //CurrentTripFuelConsumed.toFixed(2),
                //Temperature,
                //GPSSignalStatus,
                //GSMSignal,
                //Direction,
                //Rotation,
                Latitude.toFixed(6),
                Longitude.toFixed(6),
                ]).draw(false);
            })           
        }

        var IdlTim=0;

        if (Track.IdleTime > 0)
        {
            IdlTim = Track.IdleTime;
        }

        if (Track != null || Track != undefined)
        {
            $('#trip_table').find('tbody').empty();
            table_Trip.clear();
            table_Trip.row.add([
                AssetName,
                ConvertTime(Track.TripStartTime, 'live'),
                Track.IgnitionNo,
                Track.DrivingTime.toFixed(2),
                Track.IdleTime,
                '',
                Track.AvgSpeed,
                Track.MaxSpeed,
                Track.MaxRotation,
                Track.NoOfAcc,
                Track.NoOfDec
            ]).draw(true);
        }
        //var KMLTrEvent = '<tr>' +
        //                        '<td>' + ConvertTime(UTCTimeAndDate, 'live') + '</td>' +
        //                        '<td>' + Latitude + '</td>' +
        //                        '<td>' + Longitude + '</td>' +
        //                        '<td>' + IsNull(DoorLocked) + '</td>' +
        //                        '<td>' + IsNull(DoorUnlocked) + '</td>' +
        //                        '<td>' + IsNull(IsDoorOpen) + '</td>' +
        //                        '<td>' + IsNull(IsDoorUnlock) + '</td>' +
        //                        '<td>' + IsNull(SirenSound) + '</td>' +
        //                        '<td>' + IsNull(CarStopRelay) + '</td>' +
        //                        '<td>' + IsNull(SOS) + '</td>' +
        //                        '<td>' + IsNull(AntiTemper) + '</td>' +
        //                        '<td>' + IsNull(EngineStatus) + '</td>' +
        //                    '</tr>';
        //$('#position_table').find('tbody').append(KMLTr);
        //$('#events_table').find('tbody').append(KMLTrEvent);

        
        


        //tableDataLog.push({ Signal: GPSSignalStatus, Speed: Speed, Mileage: Odometer, Direction: Direction, Rotation: Rotation, Altitude: Altitude, DateTime: ConvertTime(UTCTimeAndDate), Latitude: Latitude, Longitude: Longitude });
        //tableEventDataLog.push({ DoorLocked: IsNull(DoorLocked), SirenSound: IsNull(SirenSound), DoorUnlocked: IsNull(DoorUnlocked), CarStopRelay: IsNull(CarStopRelay), SOS: IsNull(SOS), AntiTemper: IsNull(AntiTemper), IsDoorOpen: IsNull(IsDoorOpen), IsDoorUnlock: IsNull(IsDoorUnlock), EngineStatus: IsNull(EngineStatus), DateTime: ConvertTime(UTCTimeAndDate), Latitude: Latitude, Longitude: Longitude });
        //tableEventData.push({ DoorLocked: IsNull(Key.ObjInpOutStatus.OutLockthedoor), SirenSound: IsNull(Key.ObjInpOutStatus.OutSirenSound), DoorUnlocked: IsNull(Key.ObjInpOutStatus.OutUnlockthedoor), CarStopRelay: IsNull(Key.ObjInpOutStatus.OutRelyToStopCar), SOS: IsNull(Key.ObjInpOutStatus.InSOS), AntiTemper: IsNull(Key.ObjInpOutStatus.InAntiTemper), IsDoorOpen: IsNull(Key.ObjInpOutStatus.InDoorOpenClose), IsDoorUnlock: IsNull(Key.ObjInpOutStatus.InUnlockDoor), EngineStatus: IsNull(Key.ObjInpOutStatus.InEngineOnOff), DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
        //table_position.setData(tableDataLog);
        //table_events.setData(tableEventDataLog);
        
    }

    function clearBottomPanel() {
        tableDataLog = [];
        DistanceCoveredG = [];
        AverageSpeedG = [];



        //tableEventDataLog = [];
        //table_position.clearData();
        //table_events.clearData();
        table.clear();
        table_e.clear();
        table_fence.clear();
        table_Trip.clear();

        $('#position_table').find('tbody').empty();
        $('#events_table').find('tbody').empty();
        $('#fence_table').find('tbody').empty();
        $('#trip_table').find('tbody').empty();

        var EmptyRowHTML = '<tr><td valign="top" colspan="23" class="dataTables_empty">No data available</td></tr>';
        var EmptyRowHTMLEvent = '<tr><td valign="top" colspan="12" class="dataTables_empty">No data available</td></tr>';
        var EmptyRowHTMFence = '<tr><td valign = "top" colspan= "9" class ="dataTables_empty">No data available.</td></tr>"';
        var EmptyRowHTMLTrip = '<tr><td valign = "top" colspan= "11" class ="dataTables_empty">No data available.</td></tr>"';

        $('#position_table').find('tbody').append(EmptyRowHTML);
        $('#events_table').find('tbody').append(EmptyRowHTMLEvent);
        $('#fence_table').find('tbody').append(EmptyRowHTMFence);
        $('#table_fence').find('tbody').append(EmptyRowHTMLTrip);
        
        $('#DistanceCovered').text('');
        $('#AverageSpeed').text('');
       
    }

    function ExtractInfoByIMEI(IMEI) {
        var VehicleNameForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parent().parent().children('h6').children('span').eq(0).text();
        var VehicleDriverForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parent().parent().children().children().eq(3).text();
        var VehicleDriverImageForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parent().parent().children().children().eq(3).attr('value');
        var VehicleImageForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parent().parent().parent().children('img').attr('src');
        var VehicleIDNoForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parent().parent().parent().children().children().children().eq(2).attr('value');
        var VehicleTypeForWidget = $('#assigned-toggle').find('span:contains("' + IMEI + '")').parents('div.panel.box.box-primary.GroupLevel').children().eq(0).text();

        $('#WChassisNumber').text(VehicleNameForWidget);
        $('#WDriver').text(VehicleDriverForWidget);
        $('#WVehicleDriverImage').attr('src', VehicleDriverImageForWidget);
        $('#WVehicleImage').attr('src', VehicleImageForWidget);
        $('#WIMEI').text(IMEI);
        $('#WRegistrationNumber').text(VehicleIDNoForWidget);
        $('#WType').text(VehicleTypeForWidget);
    }


    function UpdateWidgetData(VehicleName, VehicleType, VIN, IMEI, Latitude, Longitude, DriverName, VehicleImage, DriverImage) {
        $('#WChassisNumber').text(VehicleName);
        $('#WType').text(VehicleType);
        $('#WRegistrationNumber').text(VIN);
        $('#WIMEI').text(IMEI);
        $('#WLatitude').text(Latitude);
        $('#WLongitude').text(Longitude);
        $('#WDriver').text(DriverName);
        $('#WVehicleImage').attr('src', VehicleImage);
        $('#WVehicleDriverImage').attr('src', DriverImage);
    }

    function createIconOnMap_ByLocation(DOM_Node) {

        var GetLatLngCheckBox = $(DOM_Node).parent().parent().attr('value');

        var GetImageCheckBox = $(DOM_Node).parent().parent().children().eq(1).attr('src');

        var GetLatLngCheckBoxArray = GetLatLngCheckBox.split(",");

        var VehicleIndex = $(".selectable").index($(DOM_Node));

        var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
        var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;

        //if ($(this).prop('checked') == true) {
            if (GetLatLngCheckBoxArray[0] != 0 && GetLatLngCheckBoxArray[1] != 0) {

                var myLatLng1 = new google.maps.LatLng(GetLatLngCheckBoxArray[0], GetLatLngCheckBoxArray[1]);
                var VehicleMarker = new google.maps.Marker({
                    position: myLatLng1,
                    map: map,
                    icon: VehicleExactImage
                });

                var WVehicleRegisteration = $(DOM_Node).parent().parent().children('div').eq(0).children('i').eq(0).attr('value');
                var infowindow = new google.maps.InfoWindow({
                    content: '<div class="reg-num"><p>' + WVehicleRegisteration + '</p></div>',
                });


                infowindow.open(map, VehicleMarker);

                google.maps.event.addListener(infowindow, 'domready', function () {
                    $(".reg-num").parents(':eq(4)').addClass('reg-num-parent');
                });


                VehicleMarker.addListener('click', function (event) {
                    var latitude = this.position.lat();
                    var longitude = this.position.lng();

                    for (v = 0; v < VehicleIcon.length; v++) {
                        var VehicleIconLngVal = null;
                        if (VehicleIconLng[v] === undefined || VehicleIconLng[v] === null) {
                            VehicleIconLngVal = null;
                        } else {
                            VehicleIconLngVal = VehicleIconLng[v].split(' ').join('');
                            if (latitude.toFixed(6) == VehicleIconLat[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                    $('.fleet-vehicle-wrapper').show();
                                }

                                /* == Extract Data and Render in Widget == */
                                var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).children('span').eq(0).text();
                                var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();

                                var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                            }
                        }

                    }

                });


               

                if (VehicleIcon[VehicleIndex] != undefined) {
                    VehicleIcon[VehicleIndex].setMap(null);
                    VehicleIconLat[VehicleIndex] = null;
                }
                VehicleIcon[VehicleIndex] = VehicleMarker;
                VehicleIconLat[VehicleIndex] = GetLatLngCheckBoxArray[0];
                VehicleIconLng[VehicleIndex] = GetLatLngCheckBoxArray[1];



           

            }
        //}
    }

    $(document).ready(function () {
        
        $('.fleet-vehicle-wrapper').hide();
        //url: "/Fleet/Vehicle/GetAvailableRecord",
        $.ajax({
            url: "/Fleet/Vehicle/GetRecord/?id=1",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            datatype: JSON,
            success: function (result) {
                var GetJson = JSON.stringify(result);
                var jsonOut = {};
                var jsonOutType = {};
                result.forEach(function (e, i) {
                    jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                    jsonOut[e.VehicleGroupName].push(e);

                    jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                    jsonOutType[e.TypeName].push(e);
                })


                var keys = Object.keys(jsonOutType);
                var Parentkeys = Object.keys(jsonOut);



                var ParentDom = "";
                var EmptyNode = "";


                for (x = 0; x < Parentkeys.length; x++) {
                    var Pstr = Parentkeys[x];
                    var BodyDomBox = "";
                    var TempBody = "";
                    var AfterTempBody = "";
                    ParentDom = ParentDom +
                        '<div class="panel box box-primary">' +
                        '<div class="box-header with-border">' +
                        '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#available-toggle" href="#Av' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                        '</div>' +
                        '<div id="Av' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                        '<div class="box-body">' +
                        '<div class="box-group" id="groups-inner">';

                    for (i = 0; i < keys.length; i++) {
                        var str = keys[i];
                        var ChildDomBox = "";
                        BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                            '<div class="box-header with-border">' +
                            '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                            '</div>' +
                            '<div id="Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                        var z = 6;
                        $(result).each(function (key, value) {
                            //console.log('key:' + key + ', value:' + value);
                            z++;
                            if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {

                                var GetLatLng = this.Location;
                                var LastLat, LastLng;
                                var chkBox;
                                if (GetLatLng == "") {
                                    LastLat = "0";
                                    LastLng = "0";
                                    chkBox = '<input class="check-fleet AvailableRecordsCheckbox" type="checkbox" disabled />';
                                } else {
                                    LastLat = GetLatLng.split(",")[0];
                                    LastLng = GetLatLng.split(",")[1];
                                    chkBox = '<input class="check-fleet AvailableRecordsCheckbox" type="checkbox" />';
                                }

                                ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                    chkBox +
                                    '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                    '<div class="fleet-text">' +
                                    '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                    '<i><span>' + this.IMEI + '</span></i>' +
                                    '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                    '</div>' +
                                    '<div class="btn-group">' +
                                    //'<button type="button" class="btn btn-xs btn-default btn-flat selectable"><i class="fa fa-map-marker"></i></button>' +
                                    '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow"></i></button>' +
                                    '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default  btn-flat"><i class="fa fa-edit"></i></a>' +
                                    '<button title="Delete" type="button" class="btn btn-xs btn-default  btn-flat delete" value="' + this.VehicleId + '"><i class="fa fa-trash"></i></button>' +
                                    '</div>' +
                                    '</div>';

                            }


                        });

                        BodyDomBox = BodyDomBox + ChildDomBox +
                            '</div>' +
                            '</div>' +
                            '</div>';

                        if (ChildDomBox != "") {
                            TempBody = BodyDomBox;
                        } else {
                            BodyDomBox = "";
                        }


                    }

                    ParentDom = ParentDom + TempBody + '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                }

                $('#available-toggle').append(ParentDom);

            },
            error: function (data) { }
        });
        $.ajax({
            url: "/Fleet/Vehicle/GetAssignedRecord",
            type: "POST",
            contentType: "application/json; charset=utf-8",
            datatype: JSON,
            success: function (result) {
                var GetJson = JSON.stringify(result);
                var jsonOut = {};
                var jsonOutType = {};
                result.forEach(function (e, i) {
                    jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                    jsonOut[e.VehicleGroupName].push(e);

                    jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                    jsonOutType[e.TypeName].push(e);
                })


                var keys = Object.keys(jsonOutType);
                var Parentkeys = Object.keys(jsonOut);



                var ParentDom = "";
                var EmptyNode = "";


                for (x = 0; x < Parentkeys.length; x++) {
                    var Pstr = Parentkeys[x];
                    var BodyDomBox = "";
                    var TempBody = "";
                    var AfterTempBody = "";
                    ParentDom = ParentDom +
                        '<div class="panel box box-primary">' +
                        '<div class="box-header with-border">' +
                        '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#assigned-toggle" href="#' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                        '</div>' +
                        '<div id="' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                        '<div class="box-body">' +
                        '<div class="box-group" id="groups-inner">';

                    for (i = 0; i < keys.length; i++) {
                        var str = keys[i];
                        var ChildDomBox = "";
                        BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                            '<div class="box-header with-border">' +
                            '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                            '</div>' +
                            '<div id="' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                        $(result).each(function () {
                            //console.log('resultLat:' + JSON.stringify(result));
                            if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {

                                /* == Populate Array with Vehicle Id & Counter of Stream == */
                                VehicleIdentityNo.push([this.IMEI, 0]);
                                var GetLatLng = this.Location;
                                var LastLat, LastLng, chkBox;
                                if (GetLatLng == "") {
                                    LastLat = "0";
                                    LastLng = "0";
                                    chkBox = '<input class="check-fleet AssignedRecordsCheckbox wifi_setting" type="checkbox" value="' + this.Direction + '" disabled/>'
                                } else {
                                    LastLat = GetLatLng.split(",")[0];
                                    LastLng = GetLatLng.split(",")[1];
                                    chkBox = '<input class="check-fleet AssignedRecordsCheckbox wifi_setting" type="checkbox" value="' + this.Direction + '"/>'
                                }

                                ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                    chkBox  +
                                    '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                    '<div class="fleet-text">' +
                                    '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                    '<i value="' + this.RegistrationNumber + '"><span value="' + this.ChassisNumber + '">' + this.IMEI + '</span></i>' +
                                    '<i>Assigned to: <span value="' + this.UserImage + '">' + this.UserName + '</span></i>' +
                                    '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                    '</div>' +
                                    '<div class="btn-group">' +
                                    '<button type="button" class="btn btn-xs btn-default  btn-flat  selectable" title="Track Live"><i class="fa fa-map-marker"></i></button>' +
                                    '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default  btn-flat"><i class="fa fa-edit"></i></a>' +
                                    '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow" ></i></button>' +
                                    //'<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default btn-flat"><i class="fa fa-edit"></i></a>' +
                                    //'<button title="Delete" type="button" class="btn btn-xs btn-default btn-flat delete" value="' + this.VehicleId + '"><i class="fa fa-trash"></i></button>' +
                                    '</div>' +
                                    '</div>';

                            }
                        });
                        VehicleIdentityNoObj = JSON.parse(JSON.stringify(VehicleIdentityNo));
                        BodyDomBox = BodyDomBox + ChildDomBox +
                            '</div>' +
                            '</div>' +
                            '</div>';

                        if (ChildDomBox != "") {
                            TempBody = BodyDomBox;
                        } else {
                            BodyDomBox = "";
                        }


                    }

                    ParentDom = ParentDom + TempBody + '</div>' +
                        '</div>' +
                        '</div>' +
                        '</div>';
                }

                $('#assigned-toggle').append(ParentDom);

            },
            error: function (data) { }
        });

        $(document).on('click', '.delete', function () {
            var DeleteId = $(this).val();
            $(this).parent().parent().remove();
            $.ajax({
                url: "/Fleet/Vehicle/DeleteRecord/?id=" + DeleteId,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    $.notify("Successfully deleted", { type: result.status, color: "#ffffff", background: "#20D67B", blur: 0.6, delay: 0, });
                },
                error: function (data) {
                    $.notify("There is an error to delete this vehicle", { type: data.status, color: "#ffffff", background: "#D44950", blur: 0.6, delay: 0, });
                }
            });
        });

        $(document).on('click', '.searchBtn', function () {
            var SearchCode = $(this).parent().parent().attr('id');
            var SearchQuery = $(this).parent().children().eq(0).val();

            if (SearchQuery < 3) {
                $.notify("Minimum 3 characters required to search vehicle", { color: "#ffffff", background: "#D44950", blur: 0.6, delay: 0, });
            }
            else {
                if (SearchCode == "available") {
                    $.ajax({
                        url: "/Fleet/Vehicle/GetRecordSearch/?id=" + $(this).parent().children().eq(0).val(),
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        datatype: JSON,
                        success: function (result) {
                            $('#available-toggle').empty();
                            var GetJson = JSON.stringify(result);
                            var jsonOut = {};
                            var jsonOutType = {};
                            result.forEach(function (e, i) {
                                jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                                jsonOut[e.VehicleGroupName].push(e);

                                jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                                jsonOutType[e.TypeName].push(e);
                            })


                            var keys = Object.keys(jsonOutType);
                            var Parentkeys = Object.keys(jsonOut);



                            var ParentDom = "";
                            var EmptyNode = "";


                            for (x = 0; x < Parentkeys.length; x++) {
                                var Pstr = Parentkeys[x];
                                var BodyDomBox = "";
                                var TempBody = "";
                                var AfterTempBody = "";
                                ParentDom = ParentDom +
                                    '<div class="panel box box-primary">' +
                                    '<div class="box-header with-border">' +
                                    '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#available-toggle" href="#Av' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                                    '</div>' +
                                    '<div id="Av' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                                    '<div class="box-body">' +
                                    '<div class="box-group" id="groups-inner">';

                                for (i = 0; i < keys.length; i++) {
                                    var str = keys[i];
                                    var ChildDomBox = "";
                                    BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                                        '<div class="box-header with-border">' +
                                        '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                                        '</div>' +
                                        '<div id="Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                                    $(result).each(function () {
                                        if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {


                                            var GetLatLng = this.Location;
                                            var LastLat, LastLng;
                                            if (GetLatLng == "") {
                                                LastLat = "0";
                                                LastLng = "0";
                                            } else {
                                                LastLat = GetLatLng.split(",")[0];
                                                LastLng = GetLatLng.split(",")[1];
                                            }

                                            ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                                '<input class="check-fleet AvailableRecordsCheckbox" type="checkbox" />' +
                                                '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                                '<div class="fleet-text">' +
                                                '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                                '<i><span>' + this.IMEI + '</span></i>' +
                                                '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                                '</div>' +
                                                '<div class="btn-group">' +
                                                //'<button type="button" class="btn btn-xs btn-default btn-flat selectable"><i class="fa fa-map-marker"></i></button>' +
                                                '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow"></i></button>' +
                                                '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default btn-flat" title="Edit"><i class="fa fa-edit"></i></a>' +
                                                '<button title="Delete" type="button" class="btn btn-xs btn-default btn-flat delete" value="' + this.VehicleId + '" title="Delete"><i class="fa fa-trash"></i></button>' +
                                                '</div>' +
                                                '</div>';

                                        }
                                    });

                                    BodyDomBox = BodyDomBox + ChildDomBox +
                                        '</div>' +
                                        '</div>' +
                                        '</div>';

                                    if (ChildDomBox != "") {
                                        TempBody = BodyDomBox;
                                    } else {
                                        BodyDomBox = "";
                                    }


                                }

                                ParentDom = ParentDom + TempBody + '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>';
                            }

                            $('#available-toggle').append(ParentDom);

                        },
                        error: function (data) { }
                    });
                }
                else {
                    $.ajax({
                        url: "/Fleet/Vehicle/GetRecordSearchAssigned/?id=" + $(this).parent().children().eq(0).val(),
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        datatype: JSON,
                        success: function (result) {
                            $('#assigned-toggle').empty();
                            var GetJson = JSON.stringify(result);
                            var jsonOut = {};
                            var jsonOutType = {};
                            result.forEach(function (e, i) {
                                jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                                jsonOut[e.VehicleGroupName].push(e);

                                jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                                jsonOutType[e.TypeName].push(e);
                            })


                            var keys = Object.keys(jsonOutType);
                            var Parentkeys = Object.keys(jsonOut);



                            var ParentDom = "";
                            var EmptyNode = "";


                            for (x = 0; x < Parentkeys.length; x++) {
                                var Pstr = Parentkeys[x];
                                var BodyDomBox = "";
                                var TempBody = "";
                                var AfterTempBody = "";
                                ParentDom = ParentDom +
                                    '<div class="panel box box-primary">' +
                                    '<div class="box-header with-border">' +
                                    '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#assigned-toggle" href="#' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                                    '</div>' +
                                    '<div id="' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                                    '<div class="box-body">' +
                                    '<div class="box-group" id="groups-inner">';

                                for (i = 0; i < keys.length; i++) {
                                    var str = keys[i];
                                    var ChildDomBox = "";
                                    BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                                        '<div class="box-header with-border">' +
                                        '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                                        '</div>' +
                                        '<div id="' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                                    $(result).each(function () {
                                        if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {

                                            var GetLatLng = this.Location;
                                            var LastLat, LastLng;
                                            if (GetLatLng == "") {
                                                LastLat = "0";
                                                LastLng = "0";
                                            } else {
                                                LastLat = GetLatLng.split(",")[0];
                                                LastLng = GetLatLng.split(",")[1];
                                            }

                                            ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                                '<input class="check-fleet AssignedRecordsCheckbox wifi_setting" type="checkbox" />' +
                                                '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                                '<div class="fleet-text">' +
                                                '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                                '<i><span value="' + this.ChassisNumber + '">' + this.IMEI + '</span></i>' +
                                                '<i>Assigned to: <span value="' + this.UserImage + '">' + this.UserName + '</span></i>' +
                                                '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                                '</div>' +
                                                '<div class="btn-group">' +
                                                '<button type="button" class="btn btn-xs btn-default  btn-flat  selectable" title="Track Live"><i class="fa fa-map-marker"></i></button>' +
                                                '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default  btn-flat"><i class="fa fa-edit"></i></a>' +
                                                '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow" ></i></button>' +
                                                //'<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default btn-flat"><i class="fa fa-edit"></i></a>' +
                                                //'<button title="Delete" type="button" class="btn btn-xs btn-default btn-flat delete" value="' + this.VehicleId + '"><i class="fa fa-trash"></i></button>' +
                                                '</div>' +
                                                '</div>';

                                        }
                                    });

                                    BodyDomBox = BodyDomBox + ChildDomBox +
                                        '</div>' +
                                        '</div>' +
                                        '</div>';

                                    if (ChildDomBox != "") {
                                        TempBody = BodyDomBox;
                                    } else {
                                        BodyDomBox = "";
                                    }


                                }

                                ParentDom = ParentDom + TempBody + '</div>' +
                                    '</div>' +
                                    '</div>' +
                                    '</div>';
                            }

                            $('#assigned-toggle').append(ParentDom);

                        },
                        error: function (data) { }
                    });
                }
            }
            
        });
        $(".searchField").on('keyup', function (e) {
            if (e.keyCode == 13) {
                var SearchCode = $(this).parent().parent().attr('id');
                var SearchQuery = $(this).parent().children().eq(0).val();

                if (SearchQuery < 3) {
                    $.notify("Minimum 3 characters required to search vehicle", { color: "#ffffff", background: "#D44950", blur: 0.6, delay: 0, });
                }
                else {
                    if (SearchCode == "available") {
                        $.ajax({
                            url: "/Fleet/Vehicle/GetRecordSearch/?id=" + $(this).parent().children().eq(0).val(),
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            datatype: JSON,
                            success: function (result) {
                                $('#available-toggle').empty();
                                var GetJson = JSON.stringify(result);
                                var jsonOut = {};
                                var jsonOutType = {};
                                result.forEach(function (e, i) {
                                    jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                                    jsonOut[e.VehicleGroupName].push(e);

                                    jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                                    jsonOutType[e.TypeName].push(e);
                                })


                                var keys = Object.keys(jsonOutType);
                                var Parentkeys = Object.keys(jsonOut);



                                var ParentDom = "";
                                var EmptyNode = "";


                                for (x = 0; x < Parentkeys.length; x++) {
                                    var Pstr = Parentkeys[x];
                                    var BodyDomBox = "";
                                    var TempBody = "";
                                    var AfterTempBody = "";
                                    ParentDom = ParentDom +
                                        '<div class="panel box box-primary">' +
                                        '<div class="box-header with-border">' +
                                        '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#available-toggle" href="#Av' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                                        '</div>' +
                                        '<div id="Av' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                                        '<div class="box-body">' +
                                        '<div class="box-group" id="groups-inner">';

                                    for (i = 0; i < keys.length; i++) {
                                        var str = keys[i];
                                        var ChildDomBox = "";
                                        BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                                            '<div class="box-header with-border">' +
                                            '<h4 class="box-title"><input class="check-all AvailableRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                                            '</div>' +
                                            '<div id="Av' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                                        $(result).each(function () {
                                            if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {


                                                var GetLatLng = this.Location;
                                                var LastLat, LastLng;
                                                if (GetLatLng == "") {
                                                    LastLat = "0";
                                                    LastLng = "0";
                                                } else {
                                                    LastLat = GetLatLng.split(",")[0];
                                                    LastLng = GetLatLng.split(",")[1];
                                                }

                                                ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                                    '<input class="check-fleet AvailableRecordsCheckbox" type="checkbox" />' +
                                                    '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                                    '<div class="fleet-text">' +
                                                    '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                                    '<i><span>' + this.IMEI + '</span></i>' +
                                                    '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                                    '</div>' +
                                                    '<div class="btn-group">' +
                                                    //'<button type="button" class="btn btn-xs btn-default btn-flat selectable"><i class="fa fa-map-marker"></i></button>' +
                                                    '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow"></i></button>' +
                                                    '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default btn-flat" title="Edit"><i class="fa fa-edit"></i></a>' +
                                                    '<button title="Delete" type="button" class="btn btn-xs btn-default btn-flat delete" value="' + this.VehicleId + '" title="Delete"><i class="fa fa-trash"></i></button>' +
                                                    '</div>' +
                                                    '</div>';

                                            }
                                        });

                                        BodyDomBox = BodyDomBox + ChildDomBox +
                                            '</div>' +
                                            '</div>' +
                                            '</div>';

                                        if (ChildDomBox != "") {
                                            TempBody = BodyDomBox;
                                        } else {
                                            BodyDomBox = "";
                                        }


                                    }

                                    ParentDom = ParentDom + TempBody + '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>';
                                }

                                $('#available-toggle').append(ParentDom);

                            },
                            error: function (data) { }
                        });
                    }
                    else {
                        $.ajax({
                            url: "/Fleet/Vehicle/GetRecordSearchAssigned/?id=" + $(this).parent().children().eq(0).val(),
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            datatype: JSON,
                            success: function (result) {
                                $('#assigned-toggle').empty();
                                var GetJson = JSON.stringify(result);
                                var jsonOut = {};
                                var jsonOutType = {};
                                result.forEach(function (e, i) {
                                    jsonOut[e.VehicleGroupName] = jsonOut[e.VehicleGroupName] || [];
                                    jsonOut[e.VehicleGroupName].push(e);

                                    jsonOutType[e.TypeName] = jsonOutType[e.TypeName] || [];
                                    jsonOutType[e.TypeName].push(e);
                                })


                                var keys = Object.keys(jsonOutType);
                                var Parentkeys = Object.keys(jsonOut);



                                var ParentDom = "";
                                var EmptyNode = "";


                                for (x = 0; x < Parentkeys.length; x++) {
                                    var Pstr = Parentkeys[x];
                                    var BodyDomBox = "";
                                    var TempBody = "";
                                    var AfterTempBody = "";
                                    ParentDom = ParentDom +
                                        '<div class="panel box box-primary">' +
                                        '<div class="box-header with-border">' +
                                        '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#assigned-toggle" href="#' + Pstr.replace(/\s/g, '') + x + '" aria-expanded="true" class="">' + Parentkeys[x] + '</a></h4>' +
                                        '</div>' +
                                        '<div id="' + Pstr.replace(/\s/g, '') + x + '" class="panel-collapse collapse in" aria-expanded="true" style="">' +
                                        '<div class="box-body">' +
                                        '<div class="box-group" id="groups-inner">';

                                    for (i = 0; i < keys.length; i++) {
                                        var str = keys[i];
                                        var ChildDomBox = "";
                                        BodyDomBox = BodyDomBox + '<div class="panel box box-primary GroupLevel">' +
                                            '<div class="box-header with-border">' +
                                            '<h4 class="box-title"><input class="check-all AssignedRecordsMainCheckbox" type="checkbox" /><a data-toggle="collapse" data-parent="#groups-inner" href="#' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" aria-expanded="true" class="">' + keys[i] + '</a></h4>' +
                                            '</div>' +
                                            '<div id="' + Pstr.replace(/\s/g, '') + x + str.replace(/\s/g, '') + i + '" class="panel-collapse collapse in GroupChildren" aria-expanded="true" style=""> <div class="box-body">';
                                        $(result).each(function () {
                                            if (keys[i] == this.TypeName && Parentkeys[x] == this.VehicleGroupName) {

                                                var GetLatLng = this.Location;
                                                var LastLat, LastLng;
                                                if (GetLatLng == "") {
                                                    LastLat = "0";
                                                    LastLng = "0";
                                                } else {
                                                    LastLat = GetLatLng.split(",")[0];
                                                    LastLng = GetLatLng.split(",")[1];
                                                }

                                                ChildDomBox = ChildDomBox + '<div class="fleet-info" value="' + parseFloat(LastLat).toFixed(6) + ',' + parseFloat(LastLng).toFixed(6) + '">' +
                                                    '<input class="check-fleet AssignedRecordsCheckbox wifi_setting" type="checkbox" />' +
                                                    '<img src="/Content/Images/Vehicles/Thumb/' + this.VehicleImage + '" height="30px" width="30px">' +
                                                    '<div class="fleet-text">' +
                                                    '<h6><span>' + this.ManuName + ' ' + this.ModelName + '</span> <span>' + this.SubModelName + '</span></h6>' +
                                                    '<i><span value="' + this.ChassisNumber + '">' + this.IMEI + '</span></i>' +
                                                    '<i>Assigned to: <span value="' + this.UserImage + '">' + this.UserName + '</span></i>' +
                                                    '<i><span>' + this.RegistrationNumber + '</span></i>' +
                                                    '</div>' +
                                                    '<div class="btn-group">' +
                                                    '<button type="button" class="btn btn-xs btn-default  btn-flat  selectable" title="Track Live"><i class="fa fa-map-marker"></i></button>' +
                                                    '<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default  btn-flat"><i class="fa fa-edit"></i></a>' +
                                                    '<button type="button" class="btn btn-xs btn-default btn-flat select-area" value="' + this.VehicleId + '" title="Track Replay"><i class="fa fa-location-arrow" ></i></button>' +
                                                    //'<a title="Edit" type="button" href="/Fleet/Vehicle/edit/' + this.VehicleId + '" class="btn btn-xs btn-default btn-flat"><i class="fa fa-edit"></i></a>' +
                                                    //'<button title="Delete" type="button" class="btn btn-xs btn-default btn-flat delete" value="' + this.VehicleId + '"><i class="fa fa-trash"></i></button>' +
                                                    '</div>' +
                                                    '</div>';

                                            }
                                        });

                                        BodyDomBox = BodyDomBox + ChildDomBox +
                                            '</div>' +
                                            '</div>' +
                                            '</div>';

                                        if (ChildDomBox != "") {
                                            TempBody = BodyDomBox;
                                        } else {
                                            BodyDomBox = "";
                                        }


                                    }

                                    ParentDom = ParentDom + TempBody + '</div>' +
                                        '</div>' +
                                        '</div>' +
                                        '</div>';
                                }

                                $('#assigned-toggle').append(ParentDom);

                            },
                            error: function (data) { }
                        });
                    }
                }
                
            }
        })       
    });
   
</script>

<div class="row split-vertical">
    <div class="col-lg-12">
        <div class="row split-me">
            <div class="col-sm-4">
                <div class="panel panel-default  fleet-tabs">
                    <header class="panel-heading font-bold">
                        Fleet Information
                        <div class="btn-group pull-right btn-set">
                            <button type="button" class="btn btn-sm btn-primary" style="display: none;">Geo Fence</button>
                            <a href="/Fleet/Vehicle/group" type="button" class="btn btn-sm btn-warning">Groups</a>
                            <a href="/Fleet/Vehicle" type="button" class="btn btn-sm btn-info">Add</a>
                        </div>
                    </header>
                    <div class="panel-body">
                        <div class="nav-tabs-custom">
                            <ul class="nav nav-tabs">
                                <li class="active"><a href="#assigned" data-toggle="tab">Assigned </a></li>
                                <li><a href="#available" data-toggle="tab">Available </a></li>
                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane" id="available">
                                    <div class="searchform">
                                        <input type="text" placeholder="Search Vehicle" class="searchField"/>
                                        <button class="searchBtn"><i class="fa fa-search"></i></button>
                                    </div>
                                    <div class="box-group" id="available-toggle">
                                    </div><!-- Available Toggle -->
                                </div>
                                <div class="tab-pane active" id="assigned">
                                    <div class="searchform">
                                        <input type="text" placeholder="Search Vehicle" class="searchField"/>
                                        <button class="searchBtn"><i class="fa fa-search"></i></button>
                                    </div>
                                    <div class="box-group" id="assigned-toggle">
                                    </div><!-- assigned Toggle -->
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-sm-8">
                <div class="panel panel-default">
                    <header class="panel-heading font-bold">
                        Fleet Tracking

                        <div id="TrackOnDemand" class="btn-group pull-right btn-set">
                             
                            @*<button id="btnHandleWifiConfig" type="button" class="btn btn-sm btn-default  btn-flat " data-toggle="tooltip" data-placement="bottom" data-title="Wifi Setting">
                                <i class="fa fa-wifi"></i>
                            </button>*@ 

                            <button id="btnSetIdleTimeInterval" type="button" class="btn btn-sm btn-default  btn-flat " data-toggle="tooltip" data-placement="bottom" data-title="Set Trip Idle Interval">
                                <i class="fa fa-car"></i>
                            </button>  
                                                 
                            <button id="btnGpsPkttimeInterval" type="button" class="btn btn-sm btn-default btn-flat " data-toggle="tooltip" data-placement="bottom"  data-title="Set Time Interval">
                                <i class="fa fa-clock-o"></i>
                            </button>
                            
                            <button id="btnTrackOnDemand" type="button" class="btn btn-sm btn-default  btn-flat " title="Track on demand">
                                <i class="fa fa-map-marker"></i>
                            </button>                                                                                                                                        
                        </div>
                        <div id="Wifi_Settings" class="btn-group pull-right btn-set">
                            <button id="btnHandleWifiConfig" type="button" class="btn btn-sm btn-default  btn-flat " data-toggle="tooltip" data-placement="bottom" data-title="Wifi Setting">
                                <i class="fa fa-wifi"></i>
                            </button>
                            
                        </div>                      

                    </header>
                    <div class="panel-body">
                        <div class="map">
                            <div style="min-height:500px" id="map-canvas"></div>

                            <div class="fleet-vehicle-wrapper">
                                <div class="fleet-vehicle-info">
                                    <a class="cross" href="#" title=""><i class="fa fa-times"></i></a>
                                    <h5><img src="http://placehold.it/150x80" id="WVehicleImage" /> <span id="WChassisNumber">-</span></h5>
                                    <ul class="nav fleet-tabs">
                                        <li class="active"><a href="#tab1" data-toggle="tab">Vehicle</a></li>
                                        <li><a href="#tab2" data-toggle="tab">Tracking</a></li>
                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane fade active in" id="tab1">
                                            <div class="fv-assigned">
                                                <div class="fv-ass-left">
                                                    <img src="http://placehold.it/30x30" alt="" id="WVehicleDriverImage" />
                                                    <strong id="WDriver">-</strong>
                                                </div>
                                            </div>
                                            @*<div class="fv-img"><img src="http://placehold.it/150x80" id="WVehicleImage" /></div>*@
                                            <div class="table-container">
                                                <table class="table">
                                                    <thead></thead>
                                                    <tbody>
                                                        <tr>
                                                            <td><strong>Type</strong></td>
                                                            <td><strong>VIN</strong></td>
                                                            <td><strong>IMEI</strong></td>
                                                        </tr>
                                                        <tr>
                                                            <td id="WType">-</td>
                                                            <td id="WRegistrationNumber">-</td>
                                                            <td id="WIMEI">-</td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="tab2">
                                            <div class="fv-assigned">
                                                <div class="fv-ass-left">
                                                   
                                                </div>

                                                <span><img src="~/Content/Images/Vehicles/dashboard/activeCar.png" id="WVehicleGPSIcon" /></span>
                                                <span><img src="~/Content/Images/Vehicles/dashboard/compass.png" id="WVehicleDirectionIcon" /></span>
                                                @*<i class="fa fa-map-marker"></i>*@
                                            </div>
                                            <div class="table-container">
                                                <table class="table">
                                                    <thead></thead>
                                                    <tbody>                                              
                                                        <tr>
                                                            <td><strong>Odometer (Km)</strong></td>
                                                            <td><strong>Fuel Meter</strong></td>
                                                            <td><strong>Speed (Km/h)</strong></td>
                                                        </tr>
                                                        <tr>
                                                            <td id="WMileage">-</td>
                                                            <td>-</td>
                                                            <td id="WSpeed">-</td>
                                                        </tr>
                                                        <tr>
                                                            <td><strong>Latitude</strong></td>
                                                            <td><strong>Longitude</strong></td>
                                                            <td><strong>Dir. | Alt.</strong></td>
                                                        </tr>
                                                        <tr>
                                                            <td id="WLatitude">-</td>
                                                            <td id="WLongitude">-</td>
                                                            <td id="WDirection">-</td>
                                                        </tr>

                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>

                                </div><!-- Fleet Vehicle Info -->
                            </div><!-- Fleet Vehicle Wrapper -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-12">
        <div class="fleet-bottom" id="live-track">
            <ul class="nav fleet-nav">
                <li class="active"><a class="LiveDataTabs" href="#position" value="Position" data-toggle="tab">Live Data</a></li>
                <li><a class="LiveDataTabs" href="#events" value="Alarms" data-toggle="tab">Alarms</a></li>                
                <li><a class="LiveDataTabs" href="#trip" value="Trip" data-toggle="tab">Trip</a></li>
                <li><a class="LiveDataTabs" href="#fence" value="Fence" data-toggle="tab">Geo-Fence</a></li>
                
                <li class="fleet-status"><div><p><b>Distance Travelled:</b> <span id="DistanceCovered"></span> (km)</p> <p><b>Average Speed:</b> <span id="AverageSpeed"></span> (km/h)</p></div></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="position">
                    @*<table class="tabulator_position"></table>*@
                    <table id="position_table" class="table table-bordered pos_table" style="width:100%">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Asset Name</th>
                                <th>Device ID</th>
                                <th>Time Stamp</th>
                                @*<th>SimCard No</th>
                                <th>Owner Name</th>
                                <th>Device State</th>
                                <th>Asset Status</th>*@
                                <th>Alarm State</th>
                                @*<th>Extend State</th>
                                <th>Address</th>*@  
                                <th>Speed (km/h)</th> 
                                <th>Mileage (km)</th>  
                                <th>Fuel(%)</th>
                                <th>Fuel(L)</th>   
                                <th>Temp.(°C)</th>
                                <th>GPS Signal</th>
                                <th>GSM Signal</th>
                                <th>Direction</th>
                                <th>Rotation</th>                        
                                <th>Latitude</th>
                                <th>Longitude</th>    
                                <th>Altitude</th>
                            </tr>
                        </thead>
                        <tbody>
                            
                        </tbody>
                    </table>                
                </div>
                <div class="tab-pane LiveDataTabs" id="events">
                    <table class="table table-bordered" id="events_table">
                        <thead>
                            <tr>
                                <th>Asset Name</th>
                                <th>Device ID</th>
                                <th>Time Stamp</th>
                                @*<th>SimCard No</th>
                                <th>Owner Name</th>
                                <th>Device State</th>
                                <th>Asset Status</th>*@
                                <th>Alarm</th>
                                <th>Alarm Status</th>                                
                                <th>Current</th>
                                <th>Threshold</th>
                                @*<th>Extend State</th>*@                                
                                <th>Speed (km/h)</th>
                                <th>Mileage (km)</th>
                                @*<th>Fuel(%)</th>
                                <th>Fuel(L)</th>   
                                <th>Temp.(°C)</th>
                                <th>GPS Signal</th>
                                <th>GSM Signal</th>
                                <th>Direction</th>
                                <th>Rotation</th>*@
                                <th>Latitude</th>
                                <th>Longitude</th>                                   
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
               
                <div class="tab-pane" id="fence">
                    <table class="table table-bordered" id="fence_table">
                        <thead>
                            <tr>
                                <th>Asset Name</th>
                                <th>Device ID</th>
                                <th>Time Stamp</th>
                                <th>SimCard No</th>
                                <th>Owner Name</th>
                                <th>Time</th>
                                <th>Fence Name</th>
                                <th>Fence Status</th>
                                <th>Fence Alarm</th>                                
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>

                <div class="tab-pane" id="trip">
                    <table class="table table-bordered" id="trip_table">
                        <thead>
                            <tr>
                                <th>Asset Name</th>
                                <th>Time</th>
                                <th>Total Ignition Number</th>
                                <th>Total Driving Time (min)</th>
                                <th>Total Idle Time (min)</th>
                                <th>Avg.warm start time(s)</th>
                                <th>Avg Trip Speed</th>
                                <th>Max Speed(KM/H)</th>
                                <th>Max rotation(degrees)</th>
                                <th>Total acceleration times</th>
                                <th>Total deceleration times</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div><!-- Fleet Bottom -->
        </div>

        <div class="fleet-bottom" id="replay-track" style="display:none">
            <ul class="nav fleet-nav" id="fleet_replay_tabs">
                <li class="active"><a href="#replay_detailtrack" value="detailtrack" data-toggle="tab">Replay Data</a></li>
                @*<li><a href="#replay_mileagereport" value="mileage" data-toggle="tab">Mileage <span style="font-weight: 400;">(Daily)</span></a></li>*@
                <li><a href="#replay_alarms" value="alarms" data-toggle="tab">Alarms</a></li>
                <li><a href="#replay_engineidle" value="idleengine" data-toggle="tab">Idle Engine</a></li>
                <li><a href="#replay_fatiguedriving" value="fatiguedriving" data-toggle="tab">Fatigue Driving</a></li>
                <li><a href="#replay_trip" value="trip" data-toggle="tab">Trips</a></li>
                
                <li class="fleet-status fleet-status_replay"><div><p><b>Mileage:</b> <span id="DistanceCovered_replay"></span> (km)</p> <p><b>Average Speed:</b> <span id="AverageSpeed_replay"></span> (km/h)</p><p><b>Date:</b> <span id="Date_replay"></span></p><p><b>Start:</b> <span id="replay_Start"></span></p><p><b>End:</b> <span id="replay_End"></span></p></div></li>

            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="replay_detailtrack">
                    <table class="table table-bordered nowrap" id="detailtrack_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Asset</th>
                                <th>Device</th>
                                <th>Time</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>Speed <span style="font-weight:400;">(km/h)</span></th>
                                <th>Direction</th>
                                <th>Rotation</th>
                                <th>Current Trip Mileage</th>
                                <th>GPS Signal</th>
                                <th>GSM Signal</th>
                                <th>Mileage</th>
                                <th>Engine</th>
                                <th>Fuel <span style="font-weight:400;">(%)</span></th>
                                <th>Fuel <span style="font-weight:400;">(Ltr)</span></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                @*<div class="tab-pane" id="replay_mileagereport">
                    <table class="table table-bordered nowrap" id="mileagereport_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Asset</th>
                                <th>Device</th>
                                <th>Running Mileage <span style="font-weight:400;">(km/h)</span></th>
                                <th>Start Mileage <span style="font-weight:400;">(km/h)</span></th>
                                <th>End Mileage <span style="font-weight:400;">(km/h)</span></th>
                                <th>Start Time</th>
                                <th>End Time</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>*@
                <div class="tab-pane" id="replay_alarms">
                    <table class="table table-bordered nowrap" id="alarms_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Asset</th>
                                <th>Device</th>
                                <th>Time</th>
                                <th>Latitude</th>
                                <th>Longitude</th>
                                <th>Alarm</th>
                                <th>State</th>
                                <th>Threshold</th>
                                <th>Current</th>
                                <th>Speed <span style="font-weight:400;">(km/h)</span></th>
                                <th>Direction</th>
                                <th>Rotation</th>
                                <th>Current Trip Mileage</th>
                                <th>GPS Signal</th>
                                <th>GSM Signal</th>
                                <th>Mileage</th>
                                <th>Engine</th>
                                <th>Fuel <span style="font-weight:400;">(%)</span></th>
                                <th>Fuel <span style="font-weight:400;">(Ltr)</span></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="tab-pane" id="replay_engineidle">
                    <table class="table table-bordered nowrap" id="engineidle_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Asset</th>
                                <th>Device</th>
                                <th>Longitude</th>
                                <th>Latitude</th>
                                <th>Start Time</th>
                                <th>End Time</th>
                                
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="tab-pane" id="replay_fatiguedriving">
                    <table class="table table-bordered nowrap" id="fatiguedriving_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Asset</th>
                                <th>Device</th>
                                <th>Status</th>
                                <th>Start Time</th>
                                <th>End Time</th>

                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                <div class="tab-pane" id="replay_trip">
                    <table class="table table-bordered nowrap" id="replaytrip_table" style="width:100%">
                        <thead>
                            <tr>
                                <th>Trip</th>
                                @*<th>Date</th>*@
                                <th>Start</th>
                                <th>End</th>
                                <th>Total Time (Hours : Minutes)</th>
                                <th>Idle Time (Minutes)</th>
                                <th>Avg Speed (km/H)</th>
                                <th>Max Speed (km/H)</th>
                                <th>Distance Travelled (km)</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
                
                
            </div><!-- Fleet Bottom -->
        </div>

    </div>
</div>

<div class="custom-popover">
    <div class="datepicker"></div>
    <div class="custom-popover-footer">
        <a href="#" class="btn btn-danger cancel-custom-popver">Cancel</a>
        <a href="#" class="btn btn-info" id="SearchRoute">Search</a>
    </div>
</div>


<script src="~/Content/js/splitter.js"></script>
@*For live*@

@* For Testing purpose *@
@*<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=" + "@ViewBag.ApiMapKey" + "&sensor=false&libraries=geometry&bogusParam=.js"></script>*@
<script type="text/javascript">
    var map;
    var mapOptions;
    $(window).load(function () {
        /*================== Map =====================*/
        var myLatlng = new google.maps.LatLng(40.416775, -3.703790);
        mapOptions = {
            zoom: 2,
            center: myLatlng
        }
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

        /*var image = '/Content/Images/Vehicles/Thumb/v-Chassis_Number_1.jpg';

        var myLatLng = new google.maps.LatLng(31.4786172, 74.28153929);

        var beachMarker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            icon: image
        });*/

        /*var beachMarker1 = new google.maps.Marker({
            position: myLatLng1,
            map: map,
            icon: image
        });
        var myLatLng1 = [];
        myLatLng1[0] = new google.maps.LatLng(31.4786172, 74.28153929);
        myLatLng1[1] = new google.maps.LatLng(31.4886172, 74.28153929);
        myLatLng1[2] = new google.maps.LatLng(31.4986172, 74.28153929);
        myLatLng1[3] = new google.maps.LatLng(31.4686172, 74.28153929);
        myLatLng1[4] = new google.maps.LatLng(31.4586172, 74.28153929);
        for (x = 0; x < 5; x++) {

            var beachMarker1 = new google.maps.Marker({
                position: myLatLng1[x],
                map: map,
                icon: image
            });

        }*/
    });
</script>

<script>
    /* == Global List Contain the ID of Vehicle == */
    var VehicleIdentityNo = ['VehicleId', 0];
    var VehicleIcon = []; var VehicleIconAvailable = [];
    var VehicleIconLat = []; var VehicleIconLatAvailable = [];
    var VehicleIconLng = []; var VehicleIconLngAvailable = [];
    var VehicleId_State_Management = '';
    var DistanceCoveredReplay = [];
    var AverageSpeedReplay = [];
    //Replay Track Global
    var assetname;
    var resultdate;
    //Replay Track Global End
    $(document).on("ready", function () {

        
        
        $('.split-vertical').touchSplit({
            thickness: "5px",
            dock: "bottom",
            bp:1,
            orientation: "vertical"
        });



        if ($(window).width() < 767) {
            splitter = $('.split-me').touchSplit({
                leftMin: 420,
                rightMin: 0,
                thickness: "5px",
                dock: "left",
                bp: 1
            });
        }
        else {
            splitter = $('.split-me').touchSplit({
                leftMin: 420,
                rightMin: 0,
                thickness: "5px",
                dock: "left",
                bp: 0.2
            });
        }

        $(document).on('click', '.cross', function () {
            $('.fleet-vehicle-wrapper').hide();
        });        


        $(".fleet-text").on("click", function () {
            $(this).parent('.fleet-info').toggleClass("selected");
        });

        $(".LiveDataTabs").on("click", function () {
       
            var tab = $(this).attr('value');
            setTimeout(function () {
                debugger;
                if (tab == "Position") {
                    if (table != null && table != undefined) {
                        table.columns.adjust().draw();
                    }
                }
                else if (tab == "Alarms")
                {
                    if (table_e != null && table_e != undefined) {
                        table_e.columns.adjust().draw();
                    }
                }
                else if (tab == "Trip")
                {
                    if (table_Trip != null && table_Trip != undefined) {
                        table_Trip.columns.adjust().draw();                    
                    }
                }
            }, 500)
        });

        $("body").on("click", ".selectable", function () {
            debugger;
            prevsrc = "/Content/Images/Vehicles/dashboard/car-image.png";
            //if ($(this).data('clicked', true)) {
            //    var $wifi_setting_check = $(this).parent().parent().find(".wifi_setting");
            //    $wifi_setting_check.trigger('click');
            //}
            clearBottomPanel();

            /* == Remove All == */

            for (var VC = 0; VC < VehicleIcon.length; VC++) {
                var IsCheckedState = $('.check-fleet.AssignedRecordsCheckbox').eq(VC).prop('checked');
                if (VehicleIcon[VC] != undefined && IsCheckedState!=true) {
                    VehicleIcon[VC].setMap(null);
                    VehicleIconLat[VC] = null;

                    //VehicleIdentityNoObj[VC+2][1] = 0;
                }

                $('.fleet-vehicle-wrapper').hide();
            }
            
            var DefinedLocation = '<i class="fa fa-map-marker"></i>';
            $('.selectable').eq(VC).children('i').removeClass('swing');
            //$('[src="/Content/Images/Vehicles/dashboard/InitialLatLng.gif"]').parent().html(DefinedLocation);
                /* == Remove All == */

            $(this).parent().parent().children().eq(0).prop('checked', true);
            $(this).parent().parent().addClass('active');
            $('#TrackOnDemand').show();
            
            //IMEICollection[VC] = IMEIVal
            if (KMLState != undefined && KMLState !=null) {
                map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                KMLState = null;
            }

            $(".select-area").removeClass('active');
            $(".selectable").not(this).removeClass('active');
            $(this).toggleClass('active');

            var VehicleIndexManage = $('.selectable').index($(this));
            var IMEIVal = $(this).parent().parent().children().eq(2).children().eq(1).children().eq(0).html()
            IMEICollection[VehicleIndexManage] = IMEIVal
            if (checkArrLength(IMEICollection) == 1) {
                $('#Wifi_Settings').show();
            }
            else {
                $('#Wifi_Settings').hide();
                $('.WifiPopOverDiv').popover('hide');
            }
            /* == Remove All Icon's from MAP == */
            for (var VC = 0; VC < VehicleIcon.length; VC++) {

                if (VehicleIcon[VC] != undefined && VehicleIndexManage != VC) {
                    //if ($('.selectable').eq(VehicleIndexManage).parent().parent().children().prop('checked') != true) {
                    //VehicleIcon[VC].setMap(null);
                    //VehicleIconLat[VC] = null;
                    //$('.selectable').eq(VC).parent().parent().children().prop('checked', false);
                    //}
                }
                else
                    if (VehicleIcon[VC] != undefined && $(this).hasClass('active')!=true) {
                    VehicleIcon[VC].setMap(null);
                    VehicleIconLat[VC] = null;
                    //$('.selectable').eq(VC).parent().parent().children().prop('checked', false);
                        //$('.selectable').eq(VC).parent().parent().removeClass('active');
                    
                    }
                
                $('.fleet-vehicle-wrapper').hide();
            }
            /* == Add Icon's from MAP == */
            var CurrentInstanceOfVehicle = $('.selectable').length;

            //for (var VC = 0; VC < VehicleIcon.length; VC++) {

            //    if (VehicleIndexManage != VC) {
            //        createIconOnMap_ByLocation($('.selectable').eq(VC));
            //    }           
            //}
            //

            if ($(this).hasClass('active') != true) {
                var DefinedLocation = '<i class="fa fa-map-marker"></i>';
                $(this).html(DefinedLocation);

            }

            /* == MAP Data Population Start == */
            if ($(this).hasClass('active')) {
                //console.log('Map is clicked');



                /* == Load Marker When Vehicle is Selected == */
                //var VehicleImageSrc = $(this).parent().parent().children().eq(1).attr('src');
                var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                var VehicleLocation = $(this).parent().parent().attr('value');
                var VehicleLocationLatLng = VehicleLocation.split(",");
                var VehicleIndex = $('.selectable').index($(this));
               // console.log('VehicleIndex:' + VehicleIndex);

                if (VehicleLocationLatLng[0] != 0 && VehicleLocationLatLng[1] != 0) {
                    var DefinedLocation = '<i class="fa fa-map-marker"></i>';
                    $(this).parent().parent().children('.btn-group').children('.active').html(DefinedLocation);

                    var myLatLng1 = new google.maps.LatLng(VehicleLocationLatLng[0], VehicleLocationLatLng[1]);
                    var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;
           

                    var VehicleMarker = new google.maps.Marker({
                        position: myLatLng1,
                        map: map,
                        icon: VehicleExactImage
                    });

                    //updateMap(bearing, VehicleExactImage);
                    var WVehicleRegisteration = $(this).parent().parent().children('div').eq(0).children('i').eq(0).attr('value');
                    var infowindow = new google.maps.InfoWindow({
                        content: '<div class="reg-num"><p>' + WVehicleRegisteration + '</p></div>'
                    });

                    infowindow.open(map, VehicleMarker);

                    google.maps.event.addListener(infowindow, 'domready', function () {
                        $(".reg-num").parents(':eq(4)').addClass('reg-num-parent');
                    });


                    map.setCenter(new google.maps.LatLng(VehicleLocationLatLng[0], VehicleLocationLatLng[1]));
                    map.setZoom(15);

                    VehicleMarker.addListener('click', function (event) {
                        var latitude = this.position.lat();
                        var longitude = this.position.lng();
                        //console.log('latitude:' + latitude.toFixed(6) + ' longitude:' + longitude.toFixed(6));
                        for (v = 0; v < VehicleIcon.length; v++) {


                            //var VehicleIconLatVal = longitude.toFixed(8);
                            var VehicleIconLngVal = null;


                            if (VehicleIconLng[v] === undefined || VehicleIconLng[v] === null) {
                                VehicleIconLngVal = null;
                            } else {
                                VehicleIconLngVal = VehicleIconLng[v].split(' ').join('');
                                if (latitude.toFixed(6) == VehicleIconLat[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                    //console.log('latitude:' + latitude.toFixed(6) + ' ==  VehicleIconLat[' + v + ']:' + VehicleIconLat[v] + ' && longitude.toFixed(8):' + longitude.toFixed(6) + ' == ' + VehicleIconLngVal);
                                    //console.log('VehicleIcon[VehicleIndex]:done' + v);
                                    //$('.fleet-vehicle-wrapper').css('display', 'visible');
                                    if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                        $('.fleet-vehicle-wrapper').show();
                                    }


                                    /* == Extract Data and Render in Widget == */
                                    var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).children('span').eq(0).text();
                                    var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                    var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                    var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();

                                    var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                    var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                    var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                    UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                                    //$('#WChassisNumber').text(WVehicleName);
                                    //$('#WType').text(WVehicleType);
                                    //$('#WRegistrationNumber').text(WVehicleIdentityNo);
                                    //$('#WIMEI').text(WVehicleLicense);
                                    //$('#WLatitude').text(VehicleIconLat[v]);
                                    //$('#WLongitude').text(VehicleIconLngVal);
                                    //$('#WDriver').text(WVehicleDriver);
                                    //$('#WVehicleImage').attr('src', WVehicleImage);
                                    //$('#WVehicleDriverImage').attr('src', WVehicleDriverImage);
                                    //console.log('WVehicleType:' + WVehicleType);
                                }
                            }

                        }


                    });
                    /* If any instance on the same index remove that */
                    if (VehicleIcon[VehicleIndex] != undefined) {
                        VehicleIcon[VehicleIndex].setMap(null);
                        VehicleIconLat[VehicleIndex] = null;
                    }
                    VehicleIcon[VehicleIndex] = VehicleMarker;
                    VehicleIconLat[VehicleIndex] = VehicleLocationLatLng[0];
                    VehicleIconLng[VehicleIndex] = VehicleLocationLatLng[1];

                } else {
                   //var UndefinedLocation = '<img src="/Content/Images/Vehicles/dashboard/InitialLatLng.gif" />';
                    $(this).children().addClass('swing');
                    //$(this).parent().parent().children('.btn-group').children('.active').html(UndefinedLocation);


                }



            }
            else {
                var IsCheckedState = $(this).parent().parent().children().eq(0).prop('checked');
                //console.log('IsCheckedState:' + IsCheckedState);
                /* == IsActive State True == */
                if (IsCheckedState) {
                    createIconOnMap_ByLocation($(this));
                }

                $('.fleet-vehicle-wrapper').hide();
                
            }
            /* == MAP Data Population End== */

            
            
        });


      
        $("body").on("click", ".select-area", function () {
            $("#replay-track").hide();

            //get asset name for track replay
            //assetname = $(this).parent().prev().get(0).children[1].attributes[0].nodeValue;
            assetname = $(this).parent().prev().find('i').eq(0).attr('value');
            //get asset name for track replay

            VehicleId_State_Management = $(this).attr('value');

            $(".select-area").removeClass('active');
            
            $(this).addClass('active');
            $(".custom-popover").addClass('active');

            let left = $(this).offset().left - $('.content').offset().left;
            let top = $(this).offset().top - $('.content').offset().top;
            $(".custom-popover").css({
                "left": left,
                "top": top
            });

          

            $.ajax({
                url: "/Fleet/Vehicle/DrivePlayDates/?VehicleId=" + VehicleId_State_Management,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    var DatesObject = JSON.parse(JSON.stringify(result));
                    var Manage_dates = {};
                    DatesObject.forEach(function (key, i) {
                        Manage_dates[new Date(ConvertDate(key.DrivePlayDate))] = new Date(ConvertDate(key.DrivePlayDate));
                        //console.log("VehicleId_State_Management:" + VehicleId_State_Management + " KML Dates:" + ConvertDate(key.DrivePlayDate));
                    });
                    $('.datepicker').datepicker('destroy');
                    $('.datepicker').datepicker({
                        multidate: false,
                        clearBtn: true,
                        todayHighlight: true,

                        beforeShowDay: function (date) {

                            //var hilightedDays = {};
                            //hilightedDays[new Date('11/22/2018')] = new Date('11/22/2018');
                            if (Manage_dates[date]) {
                                return { classes: 'eventRoute', tooltip: 'Drive Available' };
                            }
                        }
                    });

                    
                     
                }
            });

               
            
            return false;

        });


        $('body').on("change", ".check-fleet", function () {            
            debugger;
            if ($(this).prop('checked') == true) {
                $(this).parents('.fleet-info').addClass('active')
            }
            else {
                $(this).parents('.fleet-info').removeClass('active');
                //$(this).removeClass('swing');
                var DefinedLocation = '<i class="fa fa-map-marker"></i>';
                //$('.swing').removeClass('swing');
                $(this).next().next().next().children().eq(0).children().removeClass('swing');
                //$('[src="/Content/Images/Vehicles/dashboard/InitialLatLng.gif"]').parent().html(DefinedLocation);
            }

            var GetLatLngCheckBox = $(this).parent().attr('value');
            var GetImageCheckBox = $(this).next().attr('src');
            var GetLatLngCheckBoxArray = GetLatLngCheckBox.split(",");

            
            
            if ($(this).hasClass('AssignedRecordsCheckbox')) {
                var VehicleIndex = $('.check-fleet.AssignedRecordsCheckbox').index($(this));
                var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;
                
                //console.log('VehicleLastDirection:' + VehicleLastDirection);
                if ($(this).prop('checked') == true) {
                    var IMEIVal = $('.check-fleet.AssignedRecordsCheckbox').eq(VehicleIndex).parent().children().eq(2).children().eq(1).children().eq(0).html();
                    IMEICollection[VehicleIndex] = IMEIVal;
                    $('#TrackOnDemand').show();
                    if (checkArrLength(IMEICollection) == 1) {
                        $('#Wifi_Settings').show();
                    }
                    else {
                        $('#Wifi_Settings').hide();                                               
                        $('.WifiPopOverDiv').popover('hide');
                    }
                    if (GetLatLngCheckBoxArray[0] != 0 && GetLatLngCheckBoxArray[1] != 0) {

                        var myLatLng1 = new google.maps.LatLng(GetLatLngCheckBoxArray[0], GetLatLngCheckBoxArray[1]);
                        var VehicleMarker = new google.maps.Marker({
                            position: myLatLng1,
                            map: map,
                            icon: VehicleExactImage
                        });
                        var WVehicleRegisteration = $(this).next().next().children('i').eq(0).attr('value');
                        var infowindow = new google.maps.InfoWindow({
                            content: '<div class="reg-num"><p>' + WVehicleRegisteration + '</p></div>'
                        });
                        infowindow.open(map, VehicleMarker);

                        google.maps.event.addListener(infowindow, 'domready', function () {
                            $(".reg-num").parents(':eq(4)').addClass('reg-num-parent');
                        });


                        VehicleMarker.addListener('click', function (event) {
                            var latitude = this.position.lat();
                            var longitude = this.position.lng();

                            for (v = 0; v < VehicleIcon.length; v++) {
                                var VehicleIconLngVal = null;
                                if (VehicleIconLng[v] === undefined || VehicleIconLng[v] === null) {
                                    VehicleIconLngVal = null;
                                } else {
                                    VehicleIconLngVal = VehicleIconLng[v].split(' ').join('');
                                    if (latitude.toFixed(6) == VehicleIconLat[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                        if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                            $('.fleet-vehicle-wrapper').show();
                                        }

                                        /* == Extract Data and Render in Widget == */
                                        var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).children('span').eq(0).text()
                                        var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                        var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                        var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();
                                        
                                        var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                        var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                        var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                        UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                                    }
                                }

                            }

                        });
                        console.log('ICON:' + VehicleMarker.getIcon());
                        VehicleIcon[VehicleIndex] = VehicleMarker;
                        VehicleIconLat[VehicleIndex] = GetLatLngCheckBoxArray[0];
                        VehicleIconLng[VehicleIndex] = GetLatLngCheckBoxArray[1];

                        var VehicleLastDirection = $('.check-fleet.AssignedRecordsCheckbox').eq(VehicleIndex).attr('value');
                        
                       setTimeout(function () {
                           updateMap(VehicleLastDirection, VehicleMarker.getIcon(),status);
                           console.log('setTimeout:');
                        }, 100);

                       
                        
                    }
                    
                }
                else {
                    var VehicleIndex = $('.check-fleet.AssignedRecordsCheckbox').index($(this));
                    IMEICollection[VehicleIndex] = null;
                    if (checkArrLength(IMEICollection) == 1) {
                        $('#Wifi_Settings').show();
                    }
                    else {
                        $('#Wifi_Settings').hide();
                        $('.WifiPopOverDiv').popover('hide');
                    }
                    
                    var hasValue = IMEICollection.some(function (value) {
                        return value !== null;
                    });

                    if (!hasValue)
                    {
                        $('#TrackOnDemand').hide();
                        $('#Wifi_Settings').hide();
                        $('.popover').hide();
                    }
                   

                    var IsActiveStatus = $(this).next().next().next().children().eq(0).hasClass('active');
                    if (IsActiveStatus) {
                        $(this).next().next().next().children().eq(0).removeClass('active');
                    }
                    for (var VC = 0; VC < VehicleIcon.length; VC++) {

                        if (VehicleIcon[VC] != undefined) {
                            //debugger;
                            if ($('.check-fleet.AssignedRecordsCheckbox').eq(VC).prop('checked') != true) {
                                //console.log('.check-fleet:' + VC + ' | VehicleIcon.length:' + VehicleIcon.length);
                                if ($('.check-fleet.AssignedRecordsCheckbox').eq(VehicleIndex).next().next().next().children().eq(0).hasClass('active') != true) {
                                    //console.log('Null marker');
                                    VehicleIcon[VC].setMap(null);
                                    VehicleIconLat[VC] = null;
                                   // console.log('VehicleIconLat[VC]:' + VehicleIconLat[VC]);

                                }
                            }


                        }

                        $('.fleet-vehicle-wrapper').hide();
                    }
                    //map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                }
                
            }
            else {
                var VehicleIndex = $('.check-fleet.AvailableRecordsCheckbox').index($(this));
                var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;
                //console.log('AvailableRecordsCheckbox start');
                if ($(this).prop('checked') == true) {
                    //console.log('AvailableRecordsCheckbox true');
                   // debugger;
                    if (GetLatLngCheckBoxArray[0] != 0 && GetLatLngCheckBoxArray[1] != 0) {
                        var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                        var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;

                        var myLatLng1 = new google.maps.LatLng(GetLatLngCheckBoxArray[0], GetLatLngCheckBoxArray[1]);
                        var VehicleMarker = new google.maps.Marker({
                            position: myLatLng1,
                            map: map,
                            icon: VehicleExactImage
                        });

                        VehicleMarker.addListener('click', function (event) {
                            var latitude = this.position.lat();
                            var longitude = this.position.lng();

                            for (v = 0; v < VehicleIcon.length; v++) {
                                var VehicleIconLngVal = null;
                                if (VehicleIconLng[v] === undefined || VehicleIconLng[v] === null) {
                                    VehicleIconLngVal = null;
                                } else {
                                    VehicleIconLngVal = VehicleIconLng[v].split(' ').join('');
                                    if (latitude.toFixed(6) == VehicleIconLat[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                        if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                            $('.fleet-vehicle-wrapper').show();
                                        }

                                        /* == Extract Data and Render in Widget == */
                                        //var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).text();
                                        //var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                        //var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                        //var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();

                                        //var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                        //var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                        //var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                        //UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                                    }
                                }

                            }

                        });

                        VehicleIconAvailable[VehicleIndex] = VehicleMarker;
                        VehicleIconLatAvailable[VehicleIndex] = GetLatLngCheckBoxArray[0];
                        VehicleIconLngAvailable[VehicleIndex] = GetLatLngCheckBoxArray[1];
                    }
                }
                else {
                    //console.log('AvailableRecordsCheckbox false');
                    var VehicleIndex = $('.check-fleet.AvailableRecordsCheckbox').index($(this));
                    var IsActiveStatus = $(this).next().next().next().children().eq(0).hasClass('active');
                    //if (IsActiveStatus) {
                    //    $(this).next().next().next().children().eq(0).removeClass('active');
                    //}
                    for (var VC = 0; VC < VehicleIconAvailable.length; VC++) {

                        if (VehicleIconAvailable[VC] != undefined) {

                            if ($('.check-fleet.AvailableRecordsCheckbox').eq(VC).prop('checked') != true) {
                                //console.log('.check-fleet:' + VC + ' | VehicleIconAvailable.length:' + VehicleIconAvailable.length);
                                //if ($('.check-fleet.AvailableRecordsCheckbox').eq(VehicleIndex).next().next().next().children().eq(0).hasClass('active') != true)
                                {
                                    //console.log('Null marker');
                                    VehicleIconAvailable[VC].setMap(null);
                                    VehicleIconLatAvailable[VC] = null;
                                    //console.log('VehicleIconLat[VC]:' + VehicleIconLat[VC]);

                                }
                            }


                        }

                        $('.fleet-vehicle-wrapper').hide();
                    }
                    //map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
                }
            }
            


        });

        $(".cancel-custom-popver").on("click", function () {
            $(this).parents('.custom-popover').removeClass('active');
        });
     
        $('#SearchRoute').click(function () {
            
            var FromDate = $('.datepicker').eq(0).datepicker("getDate");
            var ToDate = new Date();
            ToDate.setDate(FromDate.getDate() + 1);


            var FormateFromDate = FromDate.getFullYear() + '-' + (FromDate.getMonth() + 1) + '-' + FromDate.getDate();
            var FormateToDate = ToDate.getFullYear() + '-' + (ToDate.getMonth() + 1) + '-' + ToDate.getDate();

            //console.log("F:" + FormateFromDate + " | T:" + ToDate.getDate());
            var KMLDetails = [];
            debugger;
            $.when(
                $.ajax({
                    url: "/Fleet/Vehicle/CreateKML/?VehicleId=" + VehicleId_State_Management + "&FromDate=" + FormateFromDate + "&ToDate=" + FormateToDate,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: JSON,
                    success: function (result) {
                        console.log('Error_result:' + result);
                        KMLDetails = JSON.parse(JSON.stringify(result.Vehicle));
                        console.log('1KMLDetails:' + KMLDetails.length);
                        //console.log(JSON.parse(JSON.stringify(result.Vehicle[0])));
                        //console.log('KMLDetails:' + JSON.stringify(result.Vehicle));
                        if (JSON.stringify(result.IsKML) == "true") {
                            var src = window.location.origin + '/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
                            //https://drive.google.com/uc?id=1oo-tx9FNXv_Yzi_dp2pqEXI9gTW5zbwP&export=download
                            //var src = 'https://drive.google.com/uc?id=1TIMeboenSrPh25ByThcs8hZ8Xyrd6Y6o&export=download';
                            //var src = 'http://122.129.80.160:90/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
                            //var src = 'http://googlemaps.github.io/js-v2-samples/ggeoxml/cta.kml';
                            console.log(src);
                            KMLState = initializekmlDriveRoute('map-canvas', '40.683130', '-74.438613', 'abc', src);

                            if (KMLState != undefined) {
                                //KMLDetailsF(KMLDetails);
                            }
                            //var tableData = [];
                            //var tableEventData = [];
                            //$(KMLDetails).each(function (Index, Key) {

                            //    tableData.push({ Signal: Key.GPSSignalStatus, Speed: Key.Speed, Mileage: Key.Odometer, Direction: Key.Direction, Rotation: Key.Rotation, Altitude: Key.Altitude, DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
                            //    tableEventData.push({ DoorLocked: IsNull(Key.ObjInpOutStatus.OutLockthedoor), SirenSound: IsNull(Key.ObjInpOutStatus.OutSirenSound), DoorUnlocked: IsNull(Key.ObjInpOutStatus.OutUnlockthedoor), CarStopRelay: IsNull(Key.ObjInpOutStatus.OutRelyToStopCar), SOS: IsNull(Key.ObjInpOutStatus.InSOS), AntiTemper: IsNull(Key.ObjInpOutStatus.InAntiTemper), IsDoorOpen: IsNull(Key.ObjInpOutStatus.InDoorOpenClose), IsDoorUnlock: IsNull(Key.ObjInpOutStatus.InUnlockDoor), EngineStatus: IsNull(Key.ObjInpOutStatus.InEngineOnOff), DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });

                            //});


                            //table_position.setData(tableData);
                            //table_events.setData(tableEventData);

                            /* Reset the sidebar */
                            $('.custom-popover').removeClass('active');
                            //$(".selectable, .select-area").removeClass('active');
                            $(".selectable").removeClass('active');
                            $('.check-fleet.AssignedRecordsCheckbox').parent().removeClass('active');
                            $('.check-fleet.AssignedRecordsCheckbox').prop('checked', false);
                            $('.check-all.AssignedRecordsMainCheckbox').prop('checked', false);
                        }

                        // KMLDetailsF(KMLDetails);
                    }
                })
                ).then(function (data, textStatus, jqXHR) {
                    //alert(jqXHR.status); // Alerts 200
                  
                    setTimeout(function () {
                        if (KMLDetails != undefined) {
                            KMLDetailsF(KMLDetails);
                            UpdateHeight();
                            UpdateHeightReplay();
                        }
                    }, 1000);

                    
            });
            
            //$.ajax({
            //    url: "/Fleet/Vehicle/CreateKML/?VehicleId=" + VehicleId_State_Management + "&FromDate=" + FormateFromDate + "&ToDate=" + FormateToDate,
            //    type: "POST",
            //    contentType: "application/json; charset=utf-8",
            //    datatype: JSON,
            //    success: function (result) {

            //        KMLDetails = JSON.parse(JSON.stringify(result.Vehicle));
            //        console.log(JSON.parse(JSON.stringify(result.Vehicle[0])));
            //        //console.log('KMLDetails:' + JSON.stringify(result.Vehicle));
            //        if (JSON.stringify(result.IsKML) == "true") {
            //            var src = 'http://'+ window.location.host + '/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
            //            //https://drive.google.com/uc?id=1oo-tx9FNXv_Yzi_dp2pqEXI9gTW5zbwP&export=download
            //            //var src = 'https://drive.google.com/uc?id=1TIMeboenSrPh25ByThcs8hZ8Xyrd6Y6o&export=download';
            //            //var src = 'http://122.129.80.160:90/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
            //            //var src = 'http://googlemaps.github.io/js-v2-samples/ggeoxml/cta.kml';
            //            KMLState = initializekmlDriveRoute('map-canvas', '40.683130', '-74.438613', 'abc', src);

            //            if (KMLState != undefined) {
            //                //KMLDetailsF(KMLDetails);
            //            }
            //            //var tableData = [];
            //            //var tableEventData = [];
            //            //$(KMLDetails).each(function (Index, Key) {
                            
            //            //    tableData.push({ Signal: Key.GPSSignalStatus, Speed: Key.Speed, Mileage: Key.Odometer, Direction: Key.Direction, Rotation: Key.Rotation, Altitude: Key.Altitude, DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
            //            //    tableEventData.push({ DoorLocked: IsNull(Key.ObjInpOutStatus.OutLockthedoor), SirenSound: IsNull(Key.ObjInpOutStatus.OutSirenSound), DoorUnlocked: IsNull(Key.ObjInpOutStatus.OutUnlockthedoor), CarStopRelay: IsNull(Key.ObjInpOutStatus.OutRelyToStopCar), SOS: IsNull(Key.ObjInpOutStatus.InSOS), AntiTemper: IsNull(Key.ObjInpOutStatus.InAntiTemper), IsDoorOpen: IsNull(Key.ObjInpOutStatus.InDoorOpenClose), IsDoorUnlock: IsNull(Key.ObjInpOutStatus.InUnlockDoor), EngineStatus: IsNull(Key.ObjInpOutStatus.InEngineOnOff), DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
                           
            //            //});

                        
            //            //table_position.setData(tableData);
            //            //table_events.setData(tableEventData);

            //            /* Reset the sidebar */
            //            $('.custom-popover').removeClass('active');
            //            $(".selectable, .select-area").removeClass('active');
            //            $('.check-fleet.AssignedRecordsCheckbox').parent().removeClass('active');
            //            $('.check-fleet.AssignedRecordsCheckbox').prop('checked', false);
            //            $('.check-all.AssignedRecordsMainCheckbox').prop('checked', false);
            //        }

            //       // KMLDetailsF(KMLDetails);
            //    }
            //});

            //Hide Current Tabs & Show Track Replay Tabs
            $("#live-track").hide();
            //Clear ReplayDatatables
            $('#detailtrack_table').DataTable().clear().draw();
            $('#mileagereport_table').DataTable().clear().draw();
            $('#alarms_table').DataTable().clear().draw();
            $('#engineidle_table').DataTable().clear().draw();
            $('#fatiguedriving_table').DataTable().clear().draw();
            $('#replaytrip_table').DataTable().clear().draw();
            //Clear ReplayStatus Bar
            $('#AverageSpeed_replay').text('');
            $('#DistanceCovered_replay').text('');
            $('#replay_Start').text('');
            $('#replay_End').text('');
            $('#Date_replay').text('');

            //Clear ReplayDatatables
            $("#replay-track").show();
            /* Date For TrackReplay */
            var Date_Replay = FromDate.getDate() + '-' + (FromDate.getMonth() + 1) + '-' + FromDate.getFullYear();
            $('#Date_replay').text(Date_Replay);
            /* Calculate Distance Travelled For TrackReplay */
            resultdate = FormateFromDate;
            fleetreplaymodel = {


                Filter: 'MileageReport',
                resultDate: resultdate,
                Device: assetname
            }
            $.ajax({
                url: window.location.origin + "/swi/Fleet/Get_FleetMileageReportReplay",
                type: 'POST',
                data: fleetreplaymodel,
                success: function (data) {
                    var distance_total = 0;
                    for (var i = 0; i < data.length; i++) {
                        var distance = JSON.stringify(parseInt(data[i].RunningMileage));
                        distance_total =distance_total+parseInt(distance);
                        }
                    $('#DistanceCovered_replay').text(distance_total);
                },
                error: function () {
                    console.log("error");
                }
            });
            $('#fleet_replay_tabs a[href="#replay_detailtrack"]').tab('show');
            //Track Replay Datatable Working
            resultdate = FormateFromDate;
            fleetreplaymodel = {
                Filter: 'DetailTrack',
                resultDate: resultdate,
                Device: assetname
            }

             
             $('#detailtrack_table').DataTable({
                 "dom": '<"top">rt',
                 "scrollY": 150,
                 "scrollCollapse": true,
                 "scrollX": true,
                 "paging": false,
                 "lengthChange": false,
                 "destroy": true,
                 "searching": false,
                 "ajax": {
                     'type': 'POST',
                     'url': window.location.origin + "/swi/Fleet/Get_FleetDetailTrackReplay",
                     'data': fleetreplaymodel,
                     'dataSrc': ''
                 },
                 columns: [
                    { data: 'LstVehicle.RegistrationNumber', "name": "Asset" },
                    { data: 'LstVehicle.IMEI', "name": "Device" },
                    { data: 'Time', "name": "Time", "autoWidth": true },
                    { data: 'LstVehicle.Latitude', "name": "Latitude", "autoWidth": true },
                    { data: 'LstVehicle.Longitude', "name": "Longitude", "autoWidth": true },
                    { data: 'LstVehicle.Speed', "name": "Speed (km/h)" },
                    { data: 'LstVehicle.Direction', "name": "Direction" },
                    { data: 'LstVehicle.Rotation', "name": "Rotation", "autoWidth": true },
                    { data: 'LstVehicle.CurrentTripMileage', "name": "Current Trip Mileage", "autoWidth": true },
                    { data: 'LstVehicle.GPSSignalStatus', "name": "GPS Signal", "autoWidth": true },
                    { data: 'LstVehicle.GSMSignal', "name": "GSM Signal" },
                    { data: 'LstVehicle.Odometer', "name": "Mileage" },
                    { data: 'InEngineOnOff', "name": "Engine", "autoWidth": true },
                    { data: 'FuelPercent', "name": "Fuel (%)", "autoWidth": true },
                    { data: 'FuelLiter', "name": "Fuel (Ltr)", "autoWidth": true }
                 ],
                 deferRender: true,
                 "initComplete": function (settings, json) {
                     var sp;
                     var replay_start;
                     var replay_end;
                     for (var i = 5; i < $('#detailtrack_table').find('td').length; i = i + 15) {
                         
                         sp = $('#detailtrack_table').find('td').eq(i).text();
                         AverageSpeedReplay.push(parseInt(sp));
                     }

                     /* Calculate Average Speed */

                     const AverageFormula2 = arr => arr.reduce((p, c) => p + c, 0) / arr.length;
                     const ResultantAverage2 = Math.round(AverageFormula2(AverageSpeedReplay));
                     $('#AverageSpeed_replay').text(ResultantAverage2);
                     /* Replay Status Basr Start and End */
                     var replaystart_split = $('#detailtrack_table').find('td').eq(2).text();
                     var replayend_split = $('#detailtrack_table tr:last').find('td').eq(2).text();
                     var rplys = replaystart_split.split(" ");
                     var rplye = replayend_split.split(" ");
                     replay_start = rplys[1] + " " + rplys[2];
                     replay_end = rplye[1] + " "+ rplye[2];
                     $('#replay_Start').text(replay_start);
                     $('#replay_End').text(replay_end);
                 }
             });
                        
            //$('#fleet_replay_tabs a[href="#replay_mileagereport"]').on('click', function () {
                
            //    fleetreplaymodel = {


            //        Filter: 'MileageReport',
            //        resultDate: resultdate,
            //        Device: assetname
            //    }
            //        $('#mileagereport_table').DataTable({
            //        "dom": '<"top">rt',
            //        "scrollY": "200px",
            //        "scrollCollapse": true,
            //        "scrollX": true,
            //        paging: false,
            //        destroy: true,
            //        "ajax": {
            //            'type': 'POST',
            //            'url': window.location.origin + "/swi/Fleet/Get_FleetMileageReportReplay",
            //            'data': fleetreplaymodel,
            //            'dataSrc': ''
            //        },
            //        columns: [
            //           { data: 'LstVehicle.RegistrationNumber', "name": "Asset" },
            //           { data: 'LstVehicle.IMEI', "name": "Device" },
            //           { data: 'RunningMileage', "name": "Running Mileage", "autoWidth": true },
            //           { data: 'StartMileage', "name": "Start Mileage", "autoWidth": true },
            //           { data: 'EndMileage', "name": "End Mileage", "autoWidth": true },
            //           { data: 'StartTime', "name": "Start Time", "autoWidth": true },
            //           { data: 'EndTime', "name": "End Time", "autoWidth": true }
            //        ],


            //    });
            
            //})
            $('#fleet_replay_tabs a[href="#replay_alarms"]').on('click', function () {
                fleetreplaymodel = {


                    Filter: 'Alarms',
                    resultDate: resultdate,
                    Device: assetname
                }

                $('#alarms_table').DataTable({
                    "dom": '<"top">rt',
                    "scrollY": 150,
                    "scrollCollapse": true,
                    "scrollX": true,
                    lengthChange: false,
                    paging: false,
                    destroy: true,
                    "ajax": {
                        'type': 'POST',
                        'url': window.location.origin + "/swi/Fleet/Get_FleetAlarmsReplay",
                        'data': fleetreplaymodel,
                        'dataSrc': ''
                    },
                    columns: [
                       { data: 'LstVehicle.RegistrationNumber', "name": "Asset" },
                       { data: 'LstVehicle.IMEI', "name": "Device" },
                       { data: 'Time', "name": "Time", "autoWidth": true },
                       { data: 'LstVehicle.Latitude', "name": "Latitude", "autoWidth": true },
                       { data: 'LstVehicle.Longitude', "name": "Longitude", "autoWidth": true },
                       { data: 'AlarmDescription', "name": "Alarm", "autoWidth": true },
                       { data: 'AlarmState', "name": "State", "autoWidth": true },
                       { data: 'AlarmThresholdVal', "name": "Threshold", "autoWidth": true },
                       { data: 'AlarmCurrentVal', "name": "Current", "autoWidth": true },
                       { data: 'LstVehicle.Speed', "name": "Speed (km/h)" },
                       { data: 'LstVehicle.Direction', "name": "Direction" },
                       { data: 'LstVehicle.Rotation', "name": "Rotation", "autoWidth": true },
                       { data: 'LstVehicle.CurrentTripMileage', "name": "Current Trip Mileage", "autoWidth": true },
                       { data: 'LstVehicle.GPSSignalStatus', "name": "GPS Signal", "autoWidth": true },
                       { data: 'LstVehicle.GSMSignal', "name": "GSM Signal" },
                       { data: 'LstVehicle.Odometer', "name": "Mileage" },
                       { data: 'InEngineOnOff', "name": "Engine", "autoWidth": true },
                       { data: 'FuelPercent', "name": "Fuel (%)", "autoWidth": true },
                       { data: 'FuelLiter', "name": "Fuel (Ltr)", "autoWidth": true }
                    ],


                });

            })
            $('#fleet_replay_tabs a[href="#replay_fatiguedriving"]').on('click', function () {
                fleetreplaymodel = {


                    Filter: 'FatigueDriving',
                    resultDate: resultdate,
                    Device: assetname
                }

                    $('#fatiguedriving_table').DataTable({
                    "dom": '<"top">rt',
                    "scrollY": "200px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    paging: false,
                    destroy: true,
                    "ajax": {
                        'type': 'POST',
                        'url': window.location.origin + "/swi/Fleet/Get_FleetFatiguetDrivingReplay",
                        'data': fleetreplaymodel,
                        'dataSrc': ''
                    },
                    columns: [
                       { data: 'LstVehicle.RegistrationNumber', "name": "Asset" },
                       { data: 'LstVehicle.IMEI', "name": "Device" },
                       { data: 'Status', "name": "Status", "autoWidth": true },
                       { data: 'StartTime', "name": "Start Time", "autoWidth": true },
                       { data: 'EndTime', "name": "End Time", "autoWidth": true }
                    ],


                });

            })
            $('#fleet_replay_tabs a[href="#replay_engineidle"]').on('click', function () {
                fleetreplaymodel = {

                    Filter: 'IdleEngineReport',
                    resultDate: resultdate,
                    Device: assetname
                }

                $('#engineidle_table').DataTable({
                    "dom": '<"top">rt',
                    "scrollY": "200px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    paging: false,
                    destroy: true,
                    "ajax": {
                        'type': 'POST',
                        'url': window.location.origin + "/swi/Fleet/Get_FleetIdleEngineReportReplay",
                        'data': fleetreplaymodel,
                        'dataSrc': ''
                    },
                    columns: [
                       { data: 'LstVehicle.RegistrationNumber', "name": "Asset" },
                       { data: 'LstVehicle.IMEI', "name": "Device" },
                       { data: 'LstVehicle.Longitude', "name": "Longitude", "autoWidth": true },
                       { data: 'LstVehicle.Latitude', "name": "Latitude", "autoWidth": true },
                       { data: 'StartTime', "name": "Start Time", "autoWidth": true },
                       { data: 'EndTime', "name": "End Time", "autoWidth": true }
                    ],


                });

            })
            $('#fleet_replay_tabs a[href="#replay_trip"]').on('click', function () {
               
                fleetreplaymodel = {


                    Filter: 'ReplayTrip',
                    resultDate: resultdate,
                    Device: assetname
                }

                $('#replaytrip_table').DataTable({
                    "dom": '<"top">rt',
                    "scrollY": "200px",
                    "scrollCollapse": true,
                    "scrollX": true,
                    paging: false,
                    destroy: true,
                    "ajax": {
                        'type': 'POST',
                        'url': window.location.origin + "/swi/Fleet/Get_FleetTripReplay",
                        'data': fleetreplaymodel,
                        'dataSrc': ''
                    },
                    columns: [
                       {
                           data: 'TripName', "name": "Name", "autoWidth": true,
                           render: function (data, type, meta) {
                               return data;
                           }
                       },
                       //{ data: 'TripDate', "name": "Date", "autoWidth": true },
                       { data: 'ReplayTripStartTime', "name": "Start", "autoWidth": true },
                       { data: 'ReplayTripEndTime', "name": "End", "autoWidth": true },
                       { data: 'TotalTime', "name": "TotalTime (Hours:Minutes)", "autoWidth": true },
                       { data: 'IdleTime', "name": "Idle Time (Minutes)", "autoWidth": true },
                       { data: 'AvgSpeed', "name": "Avg Speed (km/H)", "autoWidth": true },
                       { data: 'MaxSpeed', "name": "Max Speed (km/H)", "autoWidth": true },
                       { data: 'DistanceTravelled', "name": "DistanceTravelled (km)", "autoWidth": true }
                    ],


                });

            })
            
            //Track Replay Datatable Working End
            
        });
        
    });

    //Replay Trip
    $("body").on('click', '#replaytrip_table tbody tr', function () {
        $(this).css({ "background-color": "#f2f2f2", "font-weight": "bold" }).siblings().css({ "background-color": "", "font-weight": "normal" });
        var replay_tripName = $(this).find("td").eq(0).text();
        console.log(replay_tripName);
        //var replay_tripdate = $(this).find("td").eq(1).text();
        //console.log(replay_tripdate);
        var replay_tripstart = $(this).find("td").eq(1).text();
        console.log(replay_tripstart);
        var replay_tripdateend = $(this).find("td").eq(2).text();
        console.log(replay_tripdateend);
        var KMLDetails = 
        $.when(
            $.ajax({
                url: "/Fleet/Vehicle/CreateKML/?VehicleId=" + VehicleId_State_Management + "&FromDate=" + replay_tripstart + "&ToDate=" + replay_tripdateend + "&tripStatus=" + true,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    console.log('Error_result:' + result);
                    KMLDetails = JSON.parse(JSON.stringify(result.Vehicle));
                    console.log('1KMLDetails:' + KMLDetails.length);
                    //console.log(JSON.parse(JSON.stringify(result.Vehicle[0])));
                    //console.log('KMLDetails:' + JSON.stringify(result.Vehicle));
                    if (JSON.stringify(result.IsKML) == "true") {
                        var src = window.location.origin + '/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
                        //https://drive.google.com/uc?id=1oo-tx9FNXv_Yzi_dp2pqEXI9gTW5zbwP&export=download
                        //var src = 'https://drive.google.com/uc?id=1TIMeboenSrPh25ByThcs8hZ8Xyrd6Y6o&export=download';
                        //var src = 'http://122.129.80.160:90/Areas/Fleet/TrackerKML/TrackerDriveRoute.kml';
                        //var src = 'http://googlemaps.github.io/js-v2-samples/ggeoxml/cta.kml';
                        console.log(src);
                        KMLState = initializekmlDriveRoute('map-canvas', '40.683130', '-74.438613', 'abc', src);

                        if (KMLState != undefined) {
                            //KMLDetailsF(KMLDetails);
                        }
                        //var tableData = [];
                        //var tableEventData = [];
                        //$(KMLDetails).each(function (Index, Key) {

                        //    tableData.push({ Signal: Key.GPSSignalStatus, Speed: Key.Speed, Mileage: Key.Odometer, Direction: Key.Direction, Rotation: Key.Rotation, Altitude: Key.Altitude, DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });
                        //    tableEventData.push({ DoorLocked: IsNull(Key.ObjInpOutStatus.OutLockthedoor), SirenSound: IsNull(Key.ObjInpOutStatus.OutSirenSound), DoorUnlocked: IsNull(Key.ObjInpOutStatus.OutUnlockthedoor), CarStopRelay: IsNull(Key.ObjInpOutStatus.OutRelyToStopCar), SOS: IsNull(Key.ObjInpOutStatus.InSOS), AntiTemper: IsNull(Key.ObjInpOutStatus.InAntiTemper), IsDoorOpen: IsNull(Key.ObjInpOutStatus.InDoorOpenClose), IsDoorUnlock: IsNull(Key.ObjInpOutStatus.InUnlockDoor), EngineStatus: IsNull(Key.ObjInpOutStatus.InEngineOnOff), DateTime: ConvertTime(Key.UTCTimeAndDate), Latitude: Key.Latitude, Longitude: Key.Longitude });

                        //});


                        //table_position.setData(tableData);
                        //table_events.setData(tableEventData);

                        /* Reset the sidebar */
                        $('.custom-popover').removeClass('active');
                        //$(".selectable, .select-area").removeClass('active');
                        $(".selectable").removeClass('active');
                        $('.check-fleet.AssignedRecordsCheckbox').parent().removeClass('active');
                        $('.check-fleet.AssignedRecordsCheckbox').prop('checked', false);
                        $('.check-all.AssignedRecordsMainCheckbox').prop('checked', false);
                    }

                    // KMLDetailsF(KMLDetails);
                }
            })
            ).then(function (data, textStatus, jqXHR) {
                //alert(jqXHR.status); // Alerts 200

                setTimeout(function () {
                    if (KMLDetails != undefined) {
                        KMLDetailsF(KMLDetails);
                        UpdateHeight();
                        UpdateHeightReplay();
                    }
                }, 1000);


            });
        
    });
   
    //Replay Trip

    $("body").on('click', '.selectable', function () {
        //Hide Track Replay Tabs & Show Live Tracking Tabs
        $("#replay-track").hide();
        $("#live-track").show();
    });
</script>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    @*<script src="~/Scripts/jquery-3.1.1.js"></script>*@
    <script src="~/Scripts/jquery.signalR-2.3.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->

    <script>     
        $(function () {


            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.clientHub;
            // Create a function that the hub can call back to display messages.
            var counter = 0;
            var VehicleMarker = [];
            var myLatLng1;                        
            var status;
            chat.client.VehicleStream = function (vobject) {
                // Add the message to the page.

                var StreamObject = JSON.parse(vobject);
                console.log(StreamObject);
                $(StreamObject).each(function (SignalRIndex, SignalRKey) {
                    //console.log('Current Tracker:' + SignalRKey.TrackerID);
                    myLatLng1 = new google.maps.LatLng(SignalRKey.Latitude, SignalRKey.Longitude);

                    for (var i = 2; i < VehicleIdentityNoObj.length; i++) {
                        //console.log('VehicleIdentityNoObj['+i+']:' + VehicleIdentityNoObj[i]);
                        var VehicleObjectStatus = VehicleIdentityNoObj[i];

                       
                        if (SignalRKey.TrackerID == VehicleObjectStatus[0]) {
                            //console.log('TrackerID:' + VehicleObjectStatus[0]);
                            var GetVehicleCount = $('.selectable').length;
                            for (var v = 0; v < GetVehicleCount; v++) {

                                var flag = $('.selectable').eq(v).parent().parent().children().children().children().eq(2).text();

                                //var VehicleImageSrc = $('.selectable').eq(v).parent().parent().children().eq(1).attr('src');

                                if (flag == SignalRKey.TrackerID) {
                                    var CurrentLatLng = SignalRKey.Latitude.toFixed(6) + ',' + SignalRKey.Longitude.toFixed(6);
                                    $('.selectable').eq(v).parent().parent().attr('value', CurrentLatLng);

                                    var DefinedLocation = '<i class="fa fa-map-marker"></i>';
                                    $('.selectable').eq(v).parent().parent().children('.btn-group').children().eq(0).html(DefinedLocation);

                                }

                                if (flag == SignalRKey.TrackerID && $('.selectable').eq(v).hasClass('active')) {

                                    //console.log('Current Tracker Matched');
                                    //console.log('vobject:' + vobject);
                                    console.log('Current Tracker Status:' + VehicleIdentityNoObj[i][1]);

                                    
                                     var VehicleImageSrc = prevsrc;
                                     

                                    if (SignalRKey.ObjInpOutStatus.InEngineOnOff == true && SignalRKey.Speed == 0) {
                                        status = "yellow";
                                        //VehicleImageSrc = "";
                                        //VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-imageyellow.png";
                                        
                                    }
                                    else if (SignalRKey.ObjInpOutStatus.InEngineOnOff == true && SignalRKey.Speed > 0) {
                                        status = "green";
                                        //VehicleImageSrc = "";
                                        //VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                                        
                                    }
                                    else if (SignalRKey.ObjInpOutStatus.InEngineOnOff == false) {
                                        status = "red";
                                        //VehicleImageSrc = "";
                                        //VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-imagered.png";
                                       
                                    }
                                    else {
                                        status = "green";
                                        //VehicleImageSrc = "";
                                        //VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                                    }
                                    //var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                                    var VehicleExactImage = VehicleImageSrc + '#' + v;
                                  

                                    RefreshDriverWidget(SignalRKey.Latitude, SignalRKey.Longitude, SignalRKey.Speed, SignalRKey.Odometer, SignalRKey.Direction, SignalRKey.Rotation, SignalRKey.GPSSignalStatus, SignalRKey.Altitude);
                                    //console.log('SignalRKey.ObjInpOutStatus.DoorLocked:' + SignalRKey.ObjInpOutStatus.OutLockthedoor);

                                    var AssetName = $('#assigned-toggle').find('span:contains("' + SignalRKey.TrackerID + '")').parent().parent().parent().children().children().children().eq(2).parent().attr('value');
                                    //SignalRKey.SimCardNo
                                    debugger;
                                    SetBottomPanelData(SignalRKey.GPSSignalStatus, AssetName, SignalRKey.TrackerID, "", "", SignalRKey.DeviceState, "", "", SignalRKey.ExtendState, SignalRKey.Address, SignalRKey.Speed, SignalRKey.Odometer, SignalRKey.Direction, SignalRKey.Rotation, SignalRKey.Altitude, SignalRKey.UTCTimeAndDate, SignalRKey.Latitude, SignalRKey.Longitude, SignalRKey.ObjInpOutStatus.OutLockthedoor, SignalRKey.ObjInpOutStatus.OutSirenSound, SignalRKey.ObjInpOutStatus.OutUnlockthedoor, SignalRKey.ObjInpOutStatus.OutRelyToStopCar, SignalRKey.ObjInpOutStatus.InSOS, SignalRKey.ObjInpOutStatus.InAntiTemper, SignalRKey.ObjInpOutStatus.InDoorOpenClose, SignalRKey.ObjInpOutStatus.InUnlockDoor, SignalRKey.ObjInpOutStatus.InEngineOnOff, SignalRKey.FuelConsumedPercentage, SignalRKey.CurrentTripFuelConsumed, SignalRKey.Temperature, SignalRKey.GPSSignalStatus, SignalRKey.GSMSignal, SignalRKey.LstAlarms, SignalRKey.objTrackerTrip);
                                    //SetBottomPanelData(SignalRKey.ObjInpOutStatus.OutLockthedoor, SignalRKey.ObjInpOutStatus.OutSirenSound, SignalRKey.ObjInpOutStatus.OutUnlockthedoor, SignalRKey.ObjInpOutStatus.OutRelyToStopCar, SignalRKey.ObjInpOutStatus.InSOS, SignalRKey.ObjInpOutStatus.InAntiTemper, SignalRKey.ObjInpOutStatus.InDoorOpenClose, SignalRKey.ObjInpOutStatus.InUnlockDoor, SignalRKey.ObjInpOutStatus.InEngineOnOff)
                                    if (VehicleIdentityNoObj[i][1] > 0) {
                                        VehicleIcon[v].setPosition(myLatLng1);
                                        VehicleIcon[v].addListener('click', function (event) {
                                            var latitude = this.position.lat();
                                            var longitude = this.position.lng();

                                            if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                                $('.fleet-vehicle-wrapper').show();
                                            }

                                            ExtractInfoByIMEI(SignalRKey.TrackerID);
                                        });
                                        map.setCenter(myLatLng1);
                                        // console.log('v:'+v+' Move:'+VehicleMarker.length);
                                        //remove existing image with car-image.png#2
                                        updateMap(SignalRKey.Direction, VehicleExactImage,status);
                                        //console.log('Move StreamObject:' + VehicleIdentityNoObj[i][1]);
                                    } else {

                                        var VehicleIndex = v;

                                        if (VehicleIcon[VehicleIndex] != undefined) {
                                            VehicleIcon[VehicleIndex].setMap(null);
                                        }

                                        
                                        

                                       // var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                                       // var VehicleExactImage = VehicleImageSrc + '#' + v;

                                        var SignalRVehicle = new google.maps.Marker({
                                            position: myLatLng1,
                                            map: map,
                                            icon: VehicleExactImage
                                        });
                                        console.log(VehicleExactImage);
                                        var WVehicleRegisteration = $('#assigned-toggle').find('span:contains("' + SignalRKey.TrackerID + '")').parent().parent().parent().children().children().children().eq(2).parent().attr('value');
                                        //console.log('WVehicleRegisteration:' + WVehicleRegisteration);
                                        var infowindow = new google.maps.InfoWindow({
                                            content: '<div class="reg-num"><p>' + WVehicleRegisteration + '</p></div>',
                                        });

                                        google.maps.event.addListener(infowindow, 'domready', function () {
                                            $(".reg-num").parents(':eq(4)').addClass('reg-num-parent');
                                        });

                                        infowindow.open(map, SignalRVehicle);
                                        updateMap(SignalRKey.Direction, VehicleExactImage , status);

                                        

                                        console.log('addListener:');
                                        SignalRVehicle.addListener('click', function (event) {
                                            var latitude = this.position.lat();
                                            var longitude = this.position.lng();

                                            if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                                $('.fleet-vehicle-wrapper').show();
                                            }

                                            ExtractInfoByIMEI(SignalRKey.TrackerID);
                                        });

                                        VehicleMarker[v] = SignalRVehicle;
                                        VehicleIcon[VehicleIndex] = VehicleMarker[v];
                                        VehicleIdentityNoObj[i][1] = 1;

                                       // console.log('Initiate StreamObject:' + VehicleIdentityNoObj[i][1]);
                                    }
                                }
                            }

                        }
                    }
                });

                //myLatLng1 = new google.maps.LatLng(name, message);
                //if (counter > 1) {
                //    VehicleMarker.setPosition(myLatLng1);
                //} else {

                // VehicleMarker = new google.maps.Marker({
                //    position: myLatLng1,
                //    map: map,
                //    icon: "http://localhost:18460/Content/Images/Vehicles/Thumb/v-09900.png"
                //});
                //}

                //counter++;

                //var VehicleIdentityNoObj = JSON.parse(JSON.stringify(VehicleIdentityNo));
            };

            // Start the connection.
            $.connection.hub.start().done(function () {

            });
        });
        // This optional function html-encodes messages for display in the page.


        // Check All Childs
        $("body").on("change", ".check-all", function () {

            if ($(this).prop('checked') == true) {
                $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"]').prop('checked', true).parent().addClass('active');
            }
            else {
                $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"]').prop('checked', false).parent().removeClass('active');
                $('.selectable ').removeClass('active');
                $('.swing ').removeClass('swing');
                //$(this).removeClass('swing');
                var DefinedLocation = '<i class="fa fa-map-marker"></i>';
               // $('.selectable').eq(VC).children('i').removeClass('swing');
                //$('[src="/Content/Images/Vehicles/dashboard/InitialLatLng.gif"]').parent().html(DefinedLocation);
            }  
            
            var CurrentCheckBoxType = $(this).hasClass('AssignedRecordsMainCheckbox');

            if (CurrentCheckBoxType) {                
               
                var CountAssignedRecordsCheckbox = $('input[type="checkbox"].AssignedRecordsCheckbox').length;
                /* == Remove All == */
                
                    for (var VC = 0; VC < VehicleIcon.length; VC++) {

                        if (VehicleIcon[VC] != undefined) {
                                    VehicleIcon[VC].setMap(null);
                                    VehicleIconLat[VC] = null;
                        }

                        $('.fleet-vehicle-wrapper').hide();
                    }
                
                /* == Remove All == */
                
                for (var check = 0; check < CountAssignedRecordsCheckbox; check++) {

                    /* == If checkbox is marked true get their lat & lng == */
                    if ($('input[type="checkbox"].AssignedRecordsCheckbox').eq(check).prop('checked')) {
                        var GetCheckedBoxLatLng = $('input[type="checkbox"].AssignedRecordsCheckbox').eq(check).parent().attr('value');
//                        debugger;
                        var IMEIVal = $('.check-fleet.AssignedRecordsCheckbox').eq(check).parent().children().eq(2).children().eq(1).children().eq(0).html();
//                        debugger;
                        IMEICollection[check] = (IMEIVal);
                        $('#TrackOnDemand').show();
                        
                        
                        if (checkArrLength(IMEICollection) == 1) {
                            $('#Wifi_Settings').show();
                        }
                        else {
                            $('#Wifi_Settings').hide();
                            $('.WifiPopOverDiv').popover('hide');
                        }
                        
                        var VehicleLocationLatLng = GetCheckedBoxLatLng.split(",");
                        var VehicleImageFromCheckbox = $('input[type="checkbox"].AssignedRecordsCheckbox').eq(check).next().attr('src');
                        var VehicleIndex = check;

                        var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                        var VehicleExactImage = VehicleImageSrc + '#' + VehicleIndex;

                        /* == Populate Icon on map == */
                        if (VehicleLocationLatLng[0] != 0 && VehicleLocationLatLng[1] != 0) {

                            var myLatLng1 = new google.maps.LatLng(VehicleLocationLatLng[0], VehicleLocationLatLng[1]);
                            var VehicleMarker = new google.maps.Marker({
                                position: myLatLng1,
                                map: map,
                                icon: VehicleExactImage
                            });

                            var WVehicleRegisteration = $('.selectable').eq(check).parent().parent().children('div.fleet-text').children().eq(1).attr('value');
                            var infowindow = new google.maps.InfoWindow({
                                content: '<div class="reg-num"><p>' + WVehicleRegisteration + '</p></div>',
                            });
                            debugger;
                            infowindow.open(map, VehicleMarker);


                            google.maps.event.addListener(infowindow, 'domready', function () {
                                $(".reg-num").parents(':eq(4)').addClass('reg-num-parent');
                            });

                            VehicleMarker.addListener('click', function (event) {
                                var latitude = this.position.lat();
                                var longitude = this.position.lng();

                                for (v = 0; v < VehicleIcon.length; v++) {
                                    var VehicleIconLngVal = null;
                                    if (VehicleIconLng[v] === undefined || VehicleIconLng[v] === null) {
                                        VehicleIconLngVal = null;
                                    } else {
                                        VehicleIconLngVal = VehicleIconLng[v].split(' ').join('');
                                        if (latitude.toFixed(6) == VehicleIconLat[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                            if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                                $('.fleet-vehicle-wrapper').show();
                                            }

                                            /* == Extract Data and Render in Widget == */
                                            var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).children('span').eq(0).text();
                                            var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                            var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                            var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();

                                            var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                            var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                            var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                            UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                                        }
                                    }

                                }

                            });

                            VehicleIcon[VehicleIndex] = VehicleMarker;
                            VehicleIconLat[VehicleIndex] = VehicleLocationLatLng[0];
                            VehicleIconLng[VehicleIndex] = VehicleLocationLatLng[1];
                        }

                    }
                    else {
                        var ManageAllIndex = $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"].AssignedRecordsCheckbox').length;
                        /* == Exact Index on DOM== */
                        for (var Mindex = 0; Mindex < ManageAllIndex; Mindex++) {
                            var CurrentCheckBoxIndex = $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"].AssignedRecordsCheckbox').eq(Mindex);
                            var VehicleIndex = $('.check-fleet.AssignedRecordsCheckbox').index($(CurrentCheckBoxIndex));
                            //console.log('Removing index:' + VehicleIndex);
                            for (var VC = 0; VC < VehicleIcon.length; VC++) {

                                if (VehicleIcon[VC] != undefined) {
                                    var CurrentCheckBoxValue = $('.check-fleet.AssignedRecordsCheckbox').eq(VC).prop('checked');
                                    //console.log('CurrentCheckBoxValue:' + CurrentCheckBoxValue);
                                    if (CurrentCheckBoxValue != true) {
                                        //console.log('CurrentCheckBoxValueInside:' + CurrentCheckBoxValue);
                                        //console.log('.check-fleet:' + VC + ' | VehicleIcon.length:' + VehicleIcon.length);
                                        if ($('.check-fleet.AssignedRecordsCheckbox').eq(VC).next().next().next().children().eq(0).hasClass('active') != true) {
                                            //console.log('Null marker');
                                            VehicleIcon[VC].setMap(null);
                                            VehicleIconLat[VC] = null;
                                            IMEICollection[check] = null;

                                            var hasValue = IMEICollection.some(function (value) {
                                                return value !== null;
                                            });

                                            if (!hasValue) {
                                                $('#TrackOnDemand').hide();
                                                $('#Wifi_Settings').hide();
                                                $('.popover').hide();
                                            }

                                            if (checkArrLength(IMEICollection) == 1) {
                                                $('#Wifi_Settings').show();
                                            }
                                            else {
                                                $('#Wifi_Settings').hide();
                                                $('.WifiPopOverDiv').popover('hide');
                                            }

                                            //if (hasValue == "" || hasValue == undefined || hasValue == null) {
                                            //    $('#TrackOnDemand').hide();
                                            //}
                                            //console.log('VehicleIcon[VC]:' + VehicleIconLat[VC]);
                                        }
                                    }


                                }

                                $('.fleet-vehicle-wrapper').hide();
                            }
                        }

                    }
                }
            }
            else {
                $('#TrackOnDemand').hide();
                $('.popover').hide();
                $('#Wifi_Settings').hide();
                var CountAvailableRecordsCheckbox = $('input[type="checkbox"].AvailableRecordsCheckbox').length;
                /* == Remove All == */

                for (var VC = 0; VC < VehicleIconAvailable.length; VC++) {

                    if (VehicleIconAvailable[VC] != undefined) {
                        VehicleIconAvailable[VC].setMap(null);
                        VehicleIconLatAvailable[VC] = null;
                    }

                    $('.fleet-vehicle-wrapper').hide();
                }

                /* == Remove All == */

                for (var check = 0; check < CountAvailableRecordsCheckbox; check++) {

                    /* == If checkbox is marked true get their lat & lng == */
                    if ($('input[type="checkbox"].AvailableRecordsCheckbox').eq(check).prop('checked')) {
                        var GetCheckedBoxLatLng = $('input[type="checkbox"].AvailableRecordsCheckbox').eq(check).parent().attr('value');
                        var VehicleLocationLatLng = GetCheckedBoxLatLng.split(",");
                        var VehicleImageFromCheckbox = $('input[type="checkbox"].AvailableRecordsCheckbox').eq(check).next().attr('src');
                        var VehicleIndex = check;

                        var VehicleImageSrc = "/Content/Images/Vehicles/dashboard/car-image.png";
                        var VehicleExactImage = VehicleImageSrc + '#' + v;

                        /* == Populate Icon on map == */
                        if (VehicleLocationLatLng[0] != 0 && VehicleLocationLatLng[1] != 0) {

                            var myLatLng1 = new google.maps.LatLng(VehicleLocationLatLng[0], VehicleLocationLatLng[1]);
                            var VehicleMarker = new google.maps.Marker({
                                position: myLatLng1,
                                map: map,
                                icon: VehicleExactImage
                            });

                            VehicleMarker.addListener('click', function (event) {
                                var latitude = this.position.lat();
                                var longitude = this.position.lng();

                                for (v = 0; v < VehicleIcon.length; v++) {
                                    var VehicleIconLngVal = null;
                                    if (VehicleIconLngAvailable[v] === undefined || VehicleIconLngAvailable[v] === null) {
                                        VehicleIconLngVal = null;
                                    } else {
                                        VehicleIconLngVal = VehicleIconLngAvailable[v].split(' ').join('');
                                        if (latitude.toFixed(6) == VehicleIconLatAvailable[v] && longitude.toFixed(6) == VehicleIconLngVal) {
                                            if ($('.fleet-vehicle-wrapper').css('display') == 'none') {
                                                $('.fleet-vehicle-wrapper').show();
                                            }

                                            /* == Extract Data and Render in Widget == */
                                            //var WVehicleName = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(0).text();
                                            //var WVehicleLicense = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().text();
                                            //var WVehicleDriver = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children().text();
                                            //var WVehicleType = $('.selectable').eq(v).parent().parent().parent().parent().parent().children().eq(0).text();

                                            //var WVehicleImage = $('.selectable').eq(v).parent().parent().children('img').attr('src');
                                            //var WVehicleDriverImage = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(2).children('span').attr('value');

                                            //var WVehicleIdentityNo = $('.selectable').eq(v).parent().parent().children('div.fleet-text').children().eq(1).children().attr('value');

                                            //UpdateWidgetData(WVehicleName, WVehicleType, WVehicleIdentityNo, WVehicleLicense, VehicleIconLat[v], VehicleIconLngVal, WVehicleDriver, WVehicleImage, WVehicleDriverImage);

                                        }
                                    }

                                }

                            });

                            VehicleIconAvailable[VehicleIndex] = VehicleMarker;
                            VehicleIconLatAvailable[VehicleIndex] = VehicleLocationLatLng[0];
                            VehicleIconLngAvailable[VehicleIndex] = VehicleLocationLatLng[1];
                        }

                    }
                    else {
                        var ManageAllIndex = $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"].AvailableRecordsCheckbox').length;
                        /* == Exact Index on DOM== */
                        for (var Mindex = 0; Mindex < ManageAllIndex; Mindex++) {
                            var CurrentCheckBoxIndex = $(this).parents('.box-header').parent('.panel').find('input[type="checkbox"].AvailableRecordsCheckbox').eq(Mindex);
                            var VehicleIndex = $('.check-fleet.AvailableRecordsCheckbox').index($(CurrentCheckBoxIndex));
                            //console.log('Removing index:' + VehicleIndex);
                            for (var VC = 0; VC < VehicleIconAvailable.length; VC++) {

                                if (VehicleIconAvailable[VC] != undefined) {
                                    var CurrentCheckBoxValue = $('.check-fleet.AvailableRecordsCheckbox').eq(VC).prop('checked');
                                    //console.log('CurrentCheckBoxValue:' + CurrentCheckBoxValue);
                                    if (CurrentCheckBoxValue != true) {
                                        //console.log('CurrentCheckBoxValueInside:' + CurrentCheckBoxValue);
                                        //console.log('.check-fleet:' + VC + ' | VehicleIcon.length:' + VehicleIcon.length);
                                        if ($('.check-fleet.AvailableRecordsCheckbox').eq(VC).next().next().next().children().eq(0).hasClass('active') != true) {
                                            //console.log('Null marker');
                                            VehicleIconAvailable[VC].setMap(null);
                                            VehicleIconLatAvailable[VC] = null;
                                            //console.log('VehicleIcon[VC]:' + VehicleIconLat[VC]);
                                        }
                                    }


                                }

                                $('.fleet-vehicle-wrapper').hide();
                            }
                        }

                    }
                }
                
            }
            
        });

        //Wifi Settings
        $('body').on('click', '#wifi_status', function () {
            var wifi_status = $(this).is(':checked');
            if (wifi_status) {
                $('#ssid_pwd').show();
            }
            else {
                $('#ssid_pwd').hide();
            }
        });
        $(document).on('click','#btnWifiSettings', function () {
            $.each($("input.wifi_setting[type='checkbox']:checked"), function () {
                   SerialNo = $(this).parent().find('i').eq(0).text();
            }); 
            var SSID_value = $('#popWifiSSID').val();
            var pwd_value = $('#popWifi_Pwd').val();
            if (SSID_value != "" && pwd_value != "") {
                $("#PopErrorSSIDSpn").removeClass("Popuperror_show").addClass("Popuperror")
                $("#PopErrorPwdSpn").removeClass("Popuperror_show").addClass("Popuperror")
                var wifiStatus = $('#wifi_status').is(':checked');
                if (!(wifiStatus)) {
                    var wifiStatusApplied = false;
                }
                else {
                    var wifiStatusApplied = false;
                    var IsSSIDApplied = false;
                    var IsPwdApplied = false;
                }
                
                var Wifi_SSID = $('#popWifiSSID').val();
                var Wifi_Pwd = $('#popWifi_Pwd').val(); 
                var model = {
                    TrackerID: SerialNo, WifiStatus: wifiStatus, IsAppliedStatus: wifiStatusApplied,
                    SSID: Wifi_SSID, WifiPassword: Wifi_Pwd, IsAppliedSSID: IsSSIDApplied, IsAppliedPwd:IsPwdApplied
                }
                $.ajax({
                    url: "/Fleet/Vehicle/InsertWifiSettings",
                    type: "POST",
                    data: JSON.stringify(model),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        if (!result.success) {
                            console.log(result.message);
                        }
                        else {
                            console.log("success");
                        }
                    }
                });
                hidePopOvers(this);
            }
            else {
                $("#PopErrorSSIDSpn").removeClass("Popuperror").addClass("Popuperror_show")
                $("#PopErrorPwdSpn").removeClass("Popuperror").addClass("Popuperror_show")
            }
        })
        $('#btnTrackOnDemand').on('click', function () {
            debugger;
            $.notify("Track On Demand request sent ", { color: "#ffffff", background: "#20D67B", blur: 0.6, delay: 0, });
            var test = IMEICollection;
            var postData = { id: IMEICollection };
            $.ajax({
                url: "/Fleet/Vehicle/IMEIForTcpCommands?id=" + IMEICollection+ "&Command=4101"  ,
                type: "POST",                
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    if (!result.success) {
                        console.log(result.message);
                    }
                }
                });
        });
        
        $(document).on('click', '#btnPopUpIdleTrip', function () {
            debugger;
            var TimeInterval = $("#popForIdleTrip").val();
            if (TimeInterval != "") {
                $.notify("Set Trip Idle Time request sent ", { color: "#ffffff", background: "#20D67B", blur: 0.6, delay: 0, });
                var test = IMEICollection;
                var postData = { id: IMEICollection };
                $.ajax({
                    url: "/Fleet/Vehicle/SetGpsTimeIntervalRequest?id=" + IMEICollection + "&Command=7500&TimeInterval=" + TimeInterval,
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    datatype: JSON,
                    success: function (result) {
                        if (!result.success) {
                            console.log(result.message);
                        }
                    }
                });

                hidePopOvers(this);
            }
            else
            {
                $("#PopIdleTripSpn").removeClass("Popuperror").addClass("Popuperror_show")
            }
        });
        
        $(document).on('click', '#btnTrackOnDemandTime', function () {
            debugger;
            
            var TimeInterval = $("#popGpsTimeIntervalSecFld").val();
            if (TimeInterval != ""){
                $.notify("Set Time Interval request sent ", { color: "#ffffff", background: "#20D67B", blur: 0.6, delay: 0, });
            var test = IMEICollection;           
            var postData = { id: IMEICollection };
            $.ajax({
                url: "/Fleet/Vehicle/SetGpsTimeIntervalRequest?id=" + IMEICollection + "&Command=4102&TimeInterval=" + TimeInterval,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                datatype: JSON,
                success: function (result) {
                    if (!result.success) {
                        console.log(result.message);
                    }
                }                
            });
                hidePopOvers(this);
            }
            else
            {
                $("#PopErrorSpn").removeClass("Popuperror").addClass("Popuperror_show");
            }
        });

        
        //var contentforwifisettings = `<div id="PopOver_Content_Wifi_Settings" ><div style="font-size:12px"><div class="form-group"><input type="checkbox" id="wifi_status" data-toggle="toggle"><br><div id="ssid_pwd"><label for="popWifiSSID">SSID</label><input id="popWifiSSID" type="text" required class="form-control" style="height: 25px;"> <span id= "PopErrorSSIDSpn" class="Popuperror">Required</span><br><label for="popWifi_pwd">Password</label><input id="popWifi_Pwd" type="password" required class="form-control" style="height: 25px;"> <span id= "PopErrorPwdSpn" class="Popuperror">Required</span></div><div class="footer" style="margin-top: 5px"><button id="btnWifiSettings"  class="btn btn-sm btn-success" style="float:right;margin-bottom:7px">Set</button></div></div></div></div>`

        //<input type="checkbox" id="wifi_status" data-toggle="toggle"><br>
                  
        $('#btnHandleWifiConfig').on('click', function () {
            $.each($("input.wifi_setting[type='checkbox']:checked"), function () {
                SerialNo = $(this).parent().find('i').eq(0).text();
            });

            $.ajax({
                url: "/Fleet/Vehicle/GetWifiSettings?trackerSerialNo=" + SerialNo,
                type: "Get",
                datatype: JSON,
                success: function (result) {
                    if (result != "") {
                        if (result.WifiStatus) {
                            $('#wifi_status').prop('checked', true);
                        }
                        else {
                            var wifi_status = $(this).is(':checked');
                            if (wifi_status) {
                                $('#ssid_pwd').show();
                            }
                            else {
                                $('#ssid_pwd').hide();
                            }
                        }
                        $('#popWifiSSID').val(result.SSID);
                        $('#popWifi_Pwd').val(result.WifiPassword);
                        if (result.IsAppliedStatus) {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(0).removeClass('fa-times text-danger').addClass('fa-check text-success');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(0).attr('title', 'IsApplied');
                        }
                        else {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(0).removeClass('fa-check text-success').addClass('fa-times text-danger');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(0).attr('title', 'IsNotApplied');
                        }
                        if (result.IsAppliedSSID) {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(1).removeClass('fa-times text-danger').addClass('fa-check text-success');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(1).attr('title', 'IsApplied');
                        }
                        else {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(1).removeClass('fa-check text-success').addClass('fa-times text-danger');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(1).attr('title', 'IsNotApplied');
                        }
                        if (result.IsAppliedPwd) {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(2).removeClass('fa-times text-danger').addClass('fa-check text-success');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(2).attr('title', 'IsApplied');
                        }
                        else {
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(2).removeClass('fa-check text-success').addClass('fa-times text-danger');
                            $('#PopOver_Content_Wifi_Settings').find('i').eq(2).attr('title', 'IsNotApplied');
                        }

                    }

                },
                error: function (result) {
                    if (!result.success) {
                        alert(result.message);
                    }
                }
            });

            setTimeout(function () {
                $('#btnWifiSettings').parents().eq(3).addClass('WifiPopOverDiv');
            }, 1);


        })
        var contentforwifisettings = `<div id="PopOver_Content_Wifi_Settings" style="min-width: 250px" >
            <div class ="form-group">
                <div class="row">
                    <div class="col-lg-12">
                        <label class ="switch pull-left" style="margin-bottom:10px;width:35px">
                            <input type="checkbox" id="wifi_status" data-toggle="toggle" />
                            <span class ="slider" value="0"></span>
                        </label>
                        <span class ="pull-right"><i class ="fa fa-check text-success"></i></span>
                    </div>
                </div>

                <div id="ssid_pwd">
                    <label for="popWifiSSID">SSID <span class="pull-right"><i class="fa fa-check text-success"></i></span></label>
                    <input id="popWifiSSID" type="text" required class ="form-control" style="height: 25px;">
                    <span id= "PopErrorSSIDSpn" class ="Popuperror">Required</span><br>
                    <label for="popWifi_pwd">Password <span class ="pull-right"><i class ="fa fa-times text-danger"></i></span></label>
                    <input id="popWifi_Pwd" type="password" required class ="form-control" style="height: 25px;">
                    <span id= "PopErrorPwdSpn" class ="Popuperror">Required</span>
                    </div>
            </div>
                <div class ="popover_footer">
                <button id="btnWifiSettings"  class ="btn btn-sm btn-success">Set</button>
                </div>

            </div>`

        $('#btnHandleWifiConfig').popover({
            html: true,
            placement: 'bottom',
            title: 'Tracker Wifi Settings <span style="float:right"  onclick="hidePopOvers(this)"><i class="fa fa-times"></i></span>',
            container: 'body',
            content: function () {
                return contentforwifisettings; //popover html
            }
        });
        var content = `<div id="PopOver_Content_Wrapper" ><div style="font-size:12px"><div class="form-group"><label for="popGpsTimes">Time Interval (Seconds):</label><input id="popGpsTimeIntervalSecFld" type="number" required class="form-control" style="height: 25px;"> <span id= "PopErrorSpn" class="Popuperror">Required</span><div class="footer" style="margin-top: 5px"><button id="btnTrackOnDemandTime"  class="btn btn-sm btn-success" style="float:right;margin-bottom:7px">Set</button></div></div></div></div>`
        //$("#PopOver_Content_Wrapper").html();

        $('#btnGpsPkttimeInterval').popover({
            html: true,
            placement: 'bottom',
            title: 'Set Gps Interval <span style="float:right"  onclick="hidePopOvers(this)"><i class="fa fa-times"></i></span>',
            container: 'body',
            content: function () {
                return content; //popover html
            }
        });

        var contentForIdleTrip = `<div id="PopOver_Content_ForIdleTrip" ><div style="font-size:12px"><div class="form-group"><label for="popGpsTimes">Time Interval (Minutes):</label><input id="popForIdleTrip" type="number" required class="form-control" style="height: 25px;"> <span id= "PopIdleTripSpn" class="Popuperror">Required</span><div class="footer" style="margin-top: 5px"><button id="btnPopUpIdleTrip"  class="btn btn-sm btn-success" style="float:right;margin-bottom:7px">Set</button></div></div></div></div>`
        $('#btnSetIdleTimeInterval').popover({
            html: true,
            placement: 'bottom',
            title: 'Set Trip Idle Time Interval <span style="float:right"  onclick="hidePopOvers(this)"><i class="fa fa-times"></i></span>',
            container: 'body',
            content: function () {
                return contentForIdleTrip; //popover html
            }
        });

        function hidePopOvers(obj) {
            debugger;
            $("#" + obj.offsetParent.id).popover('hide');
        }
            //url: "/Fleet/Vehicle/GetAvailableRecord",                
    </script>
}



<link href="~/Styles/datepicker.css" rel="stylesheet" />
<script src="~/Scripts/datepicker.js"></script>

<style>
#replay-track .dataTables_wrapper .dataTables_scroll div.dataTables_scrollBody {
    max-height: unset!important;
}

.gm-style .gm-style-iw-t::after {
    display: none;
}
    .eventRoute {
        background-color: #42B373 !important;
        background-image: none !important;
        color: #ffffff !important;
    }
</style>
<script>
    $(document).on("ready", function () {

        //$(document).on('click', '.day', function () {
         
        //    var Status = $(this).hasClass('eventRoute');
        //    console.log('Status:' + Status);
        //    if (Status) {
        //        $(this).removeClass('eventRoute');
        //    }
        //});
        $('.datepicker').datepicker().on('changeDate', function (e) {

            var MySelectedTime = new Date($('.datepicker').eq(0).datepicker("getUTCDate")).getTime();
            

            
            var IsHighlight = $('[data-date="' + MySelectedTime + '"]').hasClass('eventRoute');

            if (IsHighlight) {
                
                $('[data-date="' + MySelectedTime + '"]').removeClass('eventRoute');
                $('[data-date="' + MySelectedTime + '"]').addClass('active');
            }

            //console.log('date is IsHighlight:' + IsHighlight);
        });

        function highlightDays(date) {
            for (var i = 0; i < dates.length; i++) {
                if (new Date(dates[i]).toString() == date.toString()) {
                    return [true, 'highlight', tips[i]];
                }
            }
            return [true, ''];
        }
    });
    $('#TrackOnDemand').hide();
    $('#Wifi_Settings').hide();
     $('.popover').hide();

   


</script>

<style>
.custom-popover {
position: absolute;
left: 0;
top: 0;
margin-top: -20px;
margin-left: 30px;
background: #FFF;
z-index: 10000;
padding: 10px;
opacity: 0;
visibility: hidden;
-webkit-border-radius: 4px;
-moz-border-radius: 4px;
border-radius: 4px;
-webkit-box-shadow: 0 0 10px rgba(0,0,0,0.2);
-moz-box-shadow: 0 0 10px rgba(0,0,0,0.2);
box-shadow: 0 0 10px rgba(0,0,0,0.2);
}
.custom-popover.active {
opacity: 1;
visibility: visible;
}
.custom-popover:before {
content: "";
position: absolute;
left: -4px;
top: 25px;
width: 12px;
height: 12px;
background: #FFF;
-webkit-border-radius: 2px;
-moz-border-radius: 2px;
border-radius: 2px;
-webkit-transform: rotateZ(45deg);
-moz-transform: rotateZ(45deg);
transform: rotateZ(45deg);
}
.custom-popover-footer {
margin: 0 -10px -10px;
padding: 7px;
text-align: right;
background: #ecf0f5;
border-radius: 0 0 5px 5px;
border-top: 1px solid #ddd;
}
.custom-popover-footer a.btn {
padding: 4px 20px;
}
th.sorting {
padding-left: 10px !important;
}
.searchform {
float: right;
margin-top: -50px;
height: 33px;
background: #ecf0f5;
border-radius: 2px;
}
.searchform input {
border: 0;
background: no-repeat;
padding: 5px 20px;
height: 100%;
font-size: 13px;
width: 140px;
}
.searchform button {
background: no-repeat;
border: 0;
padding: 0 10px;
color: #979797;
}
.map {
margin: -15px -20px;
width: calc(100% + 40px);
height: calc(100% + 30px);
position: relative;
}
#map-canvas {
height: 100%;
width: 100%;
}
.split-me .panel-body {
height: calc(100% - 40px);
}
.split-me .panel {
margin: 0;
height: 100%;
overflow: hidden;
}
.fleet-tabs {
overflow: hidden;
}
.btn-set {
margin-top: -5px;
}

.fleet-tabs .panel-body {
overflow: auto;
width:100%;
}
.split-vertical > .splitter-bar {
width: 100%;
background: #bdc0c4;
z-index: 10;
overflow: hidden;
}

.row.split-me .box.style2 {
margin: 0;
height: 100%;
}
.row.split-me .box.style2.tabs-box {
overflow: auto;
}
.row.split-me .box.style2.tabs-box .box-header, .row.split-me .box.style2.tabs-box .box-body {
min-width: 800px;
}
.selectRows {
background-color: #cccddc !important;
color: #5a2222;
}

/*=== Fleet Vehicle Info === */
.fleet-vehicle-wrapper {
position: absolute;
left: 0;
top: 0;
max-width: 100%;
padding: 20px;
}
.fleet-vehicle-info {
float: left;
margin-right: 10px;
border-radius: 5px;
background: #FFF;
box-shadow: 0 0 20px rgba(0,0,0,0.2);
text-align: center;
overflow: hidden;
position: relative;
min-width: 250px;
}
.fleet-info .btn-group img {
margin: 0;
width: 14px;
}
.fleet-vehicle-info h5 {
    background: #044e80;
    margin: 0;
    color: #FFF;
    padding: 2px 8px;
    display: flex;
    font-size: 13px;
    font-weight: 600;
    align-items: center;
    text-align: center;
    justify-content: left;
}
.fleet-vehicle-info h5 img {
    vertical-align: middle;
    float: none;
    margin-right: 6px;
    margin-top: 0px;
    border-radius: 50%;
    height: 22px;
    margin: 1px 5px 3px 0;
}
.fv-assigned {
display: flex;
border-bottom: 1px solid #ddd;
padding: 7px 10px;
align-items: center;
}
.fv-ass-left {
flex: auto;
text-align: left;
}
.fv-ass-left img {
margin-right: 6px;
float: left;
width: 35px;
-webkit-border-radius: 50%;
-moz-border-radius: 50%;
border-radius: 50%;
}
.fv-ass-left i {
font-size: 11px;
display: block;
font-weight: 600;
color: #044e80;
font-style: normal;
margin: 0;
line-height: 0.9;
}
.fv-ass-left strong {
font-weight: 600;
font-size: 14px;
}
.fv-ass-left strong span {
font-size: 10px;
color: #707070;
}
.fv-assigned > span {
width: 30px;
height: 30px;
/*border: 1px solid #f76a00;
line-height: 28px;
color: #f76a00;
-webkit-border-radius: 50%;
-moz-border-radius: 50%;
border-radius: 50%;*/
}
.fv-assigned > span img {
width: 26px;
}
.table-container {
width: 100%;
overflow: auto;
}
.fv-img {
padding: 5px 0;
}
.fleet-vehicle-info table tbody td {
padding: 2px;
font-size: 12px;
color: #727272;
}
.fleet-vehicle-info table tbody td strong {
font-weight: 600;
color: #515151;
}
.fleet-vehicle-info table tbody tr:nth-child(odd) {
background: #f1f1f2;
}
.fleet-vehicle-info table {
margin: 0;
}
.fleet-tabs .box-header {
padding: 5px 10px;
border-bottom: 0;
background: #d3d9df;
margin: auto;
}
.fleet-tabs .box {
border: 0;
box-shadow: none;
margin: 0 0 5px;
}
.fleet-tabs .box-header .box-title {
font-size: 15px;
font-weight: 600;
display: flex;
width: 100%;
align-items: center;
}
.fleet-tabs .box-header .box-title input {
margin: 0 5px 0 0;
}
.fleet-tabs .box-header .box-title a {
color: #747474;
display: inline-block;
width: 100%;
}
.fleet-tabs .box-body {
padding: 5px 10px 5px 10px;
}
.fleet-tabs .box:last-child {
margin: 0;
}
.fleet-tabs .box-body {
padding: 2px 0 0;
}
.fleet-info:last-child {
margin: 0;
}


.box-group .box-group {
padding-left: 10px;
/* border-left: 1px solid #ecf0f5; */
}


.fleet-tabs .box-body .box-header {
background: #ecf0f5;
}

.fleet-info .btn.active {
background: #34a96f;
color: #FFF;
border-color: #34a96f;
}

a.cross {
position: absolute;
right: 0;
color: #FFF;
z-index: 1;
top: 0;
height: 31px;
width: 30px;
opacity: 0.6;
font-size: 10px;
line-height: 31px;
background: rgba(0,0,0,0.3);
}

a.cross:hover {
opacity: 1;
}
.split-vertical {
height: calc(100vh - 140px);
}

.datepicker table {
width: 100%;
}

table.dataTable thead th,
table.dataTable.no-footer{border-bottom:1px solid #f4f4f4}
table.dataTable thead th, table.dataTable thead td{padding:10px}

.Popuperror{
	display: none;
	margin-left: 10px;
}		

.Popuperror_show{
	color: red;
	margin-left: 0px;
}
.content{
    position:relative;
}
.content-wrapper {
    overflow: auto;
}
#replaytrip_table tbody tr{
    cursor:pointer;
}

div thead th {
    font-size: 12px;
    vertical-align: middle;
    font-weight: 600;
}

div tbody td {
    font-size: 11px;
}
</style>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
    <meta name="viewport" content="width=device-width" />
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>AirView : @ViewBag.Title</title>
    @Styles.Render("~/AdminLTE/plugins/font-awesome/css")
    @Styles.Render("~/AdminLTE/plugins/ionicons/css")
    @Styles.Render("~/AdminLTE/bootstrap/css")
    @Styles.Render("~/AdminLTE/dist/css")
    @Styles.Render("~/AdminLTE/dist/css/skins")


    <meta http-equiv="pragma" content="no-cache" />
    <noscript>
        <meta http-equiv="refresh" content="0;url=/Error/index?type=noScript" />
    </noscript>
    <style>
        .DashboardStatus {
            margin-top: 20px;
            text-decoration: underline;
        }
        /*body{
            font-family:Arial;
        }*/
    </style>
    @Scripts.Render("~/AdminLTE/plugins/jquery/js")
    @*<script src="~/Scripts/jquery-3.1.1.min.js"></script>*@
    <script src="~/Scripts/angular.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-sweetalert/1.0.1/sweetalert.js"></script>

    <script src="~/Scripts/jquery.signalR-2.3.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        const monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

        function timeSince(date) {

            var seconds = Math.floor((new Date() - date) / 1000);

            var interval = Math.floor(seconds / 31536000);

            if (interval > 1) {
                return interval + " years";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                return interval + " months";
            }
            interval = Math.floor(seconds / 86400);
            if (interval > 1) {
                return interval + " days";
            }
            interval = Math.floor(seconds / 3600);
            if (interval > 1) {
                return interval + " hours";
            }
            interval = Math.floor(seconds / 60);
            if (interval > 1) {
                return interval + " minutes";
            }
            return Math.floor(seconds) + " seconds";
        }

        $(function () {

            function updateNotification(){
                $('#NotifyBellCount').hide();
                /* == Send Ajax call to Set IsPushRead == */
                var ModelObject = [];
                for(var x=0;x<$('#NotifyBellInfo').children('li').length; x++){

                    if($('#NotifyBellInfo').children('li').eq(x).attr('data-IsPushAlertRead')!="true"){
                        var ModelAlert = {
                            AlertId: $('#NotifyBellInfo').children('li').eq(x).attr('data-AlertId'),
                            IsPushAlertRead: true,
                            AlertRecieverId: @ViewBag.UserId,
                        };
                        ModelObject.push(ModelAlert);
                    }
                }

                /* == ModelObject is ready Now send to update values == */
                if(ModelObject.length>1){
                    $.ajax({
                        url: "/swi/NotificationBellUpdate",
                        type: "POST",
                        data: JSON.stringify(ModelObject),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            ModelObject = [];
                        }
                    });
                }
            }

            console.log('SignalR Working');
            var notificationConnection = $.connection.notificationHub;
            $.connection.hub.qs = 'CurrentUser='+@ViewBag.UserId;

            notificationConnection.client.broadcaastNotif = function (json) {
                $('#NotifyBellCount').show();
                //console.log("StreamObject:" + json);
                var SRObject = JSON.parse(json);
                /* == Render Front-End for Realtime Notification BELL Start == */
                $('#NotifyBellInfo').empty();
                var UnReadCounter = 0;
                SRObject.forEach(function (e, i) {
                    console.log(JSON.stringify(e));
                    var TempDate = new Date(e.CreatedOn);
                    /* Info Node For Notification Bell with Icon */
                    if (e.UserId != "@ViewBag.UserId"){

                        if(e.IsPushAlertRead!=true){
                            UnReadCounter++;
                            var ImageNode = '<li data-AlertId="'+e.AlertId+'" data-IsPushAlertRead="'+e.IsPushAlertRead+'">'+
                               '<div class="av-not">'+
                               '<div class="not-img"><img src="'+e.Picture+'" /></div>'+
                               '<div class="not-detail">'+
                               '<h5>'+e.UserName+' <i>'+timeSince(TempDate)+'</i></h5>'+
                               '<p>'+e.Notification+'</p>'+
                               '</div>'+
                               '</div>'+
                               '</li>';

                            $('#NotifyBellInfo').append(ImageNode);
                        }
                        else{
                        
                            var ImageNode = '<li data-AlertId="'+e.AlertId+'" data-IsPushAlertRead="'+e.IsPushAlertRead+'">'+
                               '<div class="av-not new-not">'+
                               '<div class="not-img"><img src="'+e.Picture+'" /></div>'+
                               '<div class="not-detail">'+
                               '<h5>'+e.UserName+' <i>'+timeSince(TempDate)+'</i></h5>'+
                               '<p>'+e.Notification+'</p>'+
                               '</div>'+
                               '</div>'+
                               '</li>';

                            $('#NotifyBellInfo').append(ImageNode);
                        }

                        // var ImageNode = '<li>' +
                        //'<div class="av-not">' +
                        //'<div class="not-img"><img src="' + e.Picture + '" /></div>' +
                        //'<div class="not-detail">' +
                        //'<h5>' + e.UserName + ' <i>' + timeSince(TempDate) + '</i></h5>' +
                        //'<p>' + e.Notification + '</p>' +
                        //'</div>' +
                        //'</div>' +
                        //'</li>';
                        //$('#NotifyBellInfo').append(ImageNode);
                    }
                            
                });
                $('#NotifyBellCount').text(UnReadCounter);
                /* Realtime Notification Page */
                if (window.location.pathname == "/alert/notification/all") {
                    /* = Render Object by Date = */
                    var GetJson = JSON.stringify(json);
                    var jsonOut = {};
                    var SelectionList = [];
                    var SelectionJson = {};

                    SRObject.forEach(function (e, i) {

                        jsonOut[GetDate(e.CreatedOn)] = jsonOut[GetDate(e.CreatedOn)] || [];
                        jsonOut[GetDate(e.CreatedOn)].push(e);

                        SelectionJson[e.ParentName] = SelectionJson[e.ParentName] || [];
                        SelectionJson[e.ParentName].push(e);

                    });

                    var Parentkeys = Object.keys(SelectionJson);

                    $('.notifications-timeline').empty();
                    $('#NotificationFilter').empty();

                    var NotificationFilterNode = "";
                    $.each(Parentkeys, function (index, value) {
                        NotificationFilterNode += '<div class="checkbox">' + '<label> <input type="checkbox" value="' + SelectionJson[value][0].AlertCategoryId + '" checked>' + value + '</label>' + '</div>';
                    });
                    $('#NotificationFilter').append(NotificationFilterNode);

                    $.each(jsonOut, function (index, value) {

                        var NotifyAreaNodeBodyLi = "";

                        var TempDate = "";
                        var CreatedOnDate = "";
                        for (var x = 0; x < value.length; x++) {

                            TempDate = new Date(value[x].CreatedOn);
                            CreatedOnDate = value[x].CreatedOn;

                            /* Notification Area with Icon */
                            NotifyAreaNodeBodyLi += '<li>' +
                                                 '<div class="av-not">' +
                                                     '<div class="not-img"><img src="' + value[x].Picture + '" /></div>' +
                                                     '<div class="not-detail"><h5><a href="#" title="">' + value[x].UserName + '</a> ' + value[x].Notification + ' <i>' + timeSince(TempDate) + '</i></h5></div>' +
                                                 '</div>' +
                                             '</li>';
                        }

                        var NotifyAreaNodeBody = '<ul>' + NotifyAreaNodeBodyLi + '</ul>';
                        var NotifyAreaNode = '<div class="timeline-slot av-notifications ">' +
                                         '<h3>' + CompareDate(CreatedOnDate) + '</h3>' +
                                         NotifyAreaNodeBody +
                                     '</div>';
                        $('.notifications-timeline').append(NotifyAreaNode);

                    });

                    /* Update Read status of Notification if user is on the screen */
                    updateNotification();
                }

                //$('#NotifyBellCount').text(SRObject.length);
                /* == Render Front-End for Realtime Notification BELL End == */

                
            };

            $.connection.hub.start().done(function () {
                console.log("Successfully connected to CoreHub.");
            });
        });

        function timeSince(date) {

            var seconds = Math.floor((new Date() - date) / 1000);

            var interval = Math.floor(seconds / 31536000);

            if (interval > 1) {
                return interval + " years";
            }
            interval = Math.floor(seconds / 2592000);
            if (interval > 1) {
                return interval + " months";
            }
            interval = Math.floor(seconds / 86400);
            if (interval > 1) {
                return interval + " days";
            }
            interval = Math.floor(seconds / 3600);
            if (interval > 1) {
                return interval + " hours";
            }
            interval = Math.floor(seconds / 60);
            if (interval > 1) {
                return interval + " minutes";
            }
            return Math.floor(seconds) + " seconds";
        }

        function RenderNotification(jsonOut, Category) {

            $('.notifications-timeline').empty();

            if (Category.length > 0) {

                $.each(jsonOut, function (index, value) {

                    var NotifyAreaNodeBodyLi = "";

                    var TempDate = "";
                    var CreatedOnDate = "";
                    var IsChild = false;
                    for (var x = 0; x < value.length; x++) {

                        TempDate = new Date(value[x].CreatedOn);
                        CreatedOnDate = value[x].CreatedOn;

                        /* Notification Area with Icon */
                        if (Category.includes(value[x].AlertCategoryId.toString())) {
                            IsChild = true;
                            NotifyAreaNodeBodyLi += '<li>' +
                                            '<div class="av-not">' +
                                                '<div class="not-img"><img src="' + value[x].Picture + '" /></div>' +
                                                '<div class="not-detail"><h5><a href="#" title="">' + value[x].UserName + '</a> ' + value[x].Notification + ' <i>' + timeSince(TempDate) + '</i></h5></div>' +
                                            '</div>' +
                                        '</li>';
                        }

                    }

                    if (IsChild) {
                        var NotifyAreaNodeBody = '<ul>' + NotifyAreaNodeBodyLi + '</ul>';
                        var NotifyAreaNode = '<div class="timeline-slot av-notifications ">' +
                                         '<h3>' + CompareDate(CreatedOnDate) + '</h3>' +
                                         NotifyAreaNodeBody +
                                     '</div>';
                        $('.notifications-timeline').append(NotifyAreaNode);
                    }


                });

            }

        }
        function CompareDate(DateFromDB) {
            var TodayDate = new Date();
            TodayDate = GetDate(TodayDate);

            var YesterdayDate = new Date();
            YesterdayDate.setDate(YesterdayDate.getDate() - 1);
            YesterdayDate = GetDate(YesterdayDate);

            var TempDate = GetDate(DateFromDB);

            if (TodayDate == TempDate) {
                return 'Today';
            }
            else
                if (YesterdayDate == TempDate) {
                    return 'Yesterday';
                }
                else {
                    return TempDate;
                }
        }

        function GetDate(dd) {
            var TempDate = new Date(dd);
            return TempDate.getDate() + ' ' + monthNames[TempDate.getMonth()] + ' ' + TempDate.getFullYear();
        }

        Array.prototype.remove = function () {
            var what, a = arguments, L = a.length, ax;
            while (L && this.length) {
                what = a[--L];
                while ((ax = this.indexOf(what)) !== -1) {
                    this.splice(ax, 1);
                }
            }
            return this;
        };
    </script>

    @RenderSection("style", false)
</head>

<!--hold-transition skin-blue sidebar-mini-->
<body class="hold-transition skin-blue sidebar-mini sidebar-collapse">
    <div class="wrapper">
        @Html.Partial("~/views/shared/_header.cshtml")
        <aside class="main-sidebar">
            <section class="sidebar">
                <div class="user-panel">
                    <div class="pull-left image">
                        <img src="@ViewBag.picture" class="img-circle" alt="User Image" />
                    </div>
                    <div class="pull-left info">
                        <p>@ViewBag.fname @ViewBag.lname</p>
                        <a href="#"><i class="fa fa-circle text-success"></i> Online</a>
                    </div>
                </div>
                @if (SWI.Security.Filters.Permission.IsLogin())
                {
                    @Html.Action("Menu", "Permission", new { area = "" , type = "AdminLte" })
                }

            </section>
        </aside>
        <div class="content-wrapper">
            <section class="content">
                <div id="alert_message">
                    <noscript>Your browser does not support JavaScript! </noscript>
                    @Html.Partial("~/Views/Shared/_message.cshtml")
                </div>
                @RenderBody()
            </section>
        </div>
        <footer class="main-footer">
            <div class="pull-right hidden-xs">
                <b>Version</b> @ViewBag.Version
            </div>
            <strong>@Html.Raw(ViewBag.CopyrightValue)</strong>
        </footer>
    </div>
    <input type="hidden" id="-uid" value="@ViewBag.UserId" />

    @Html.Partial("~/views/shared/_modal.cshtml")
    @Scripts.Render("~/AdminLTE/bootstrap/js")
    @Scripts.Render("~/AdminLTE/plugins/slimscroll/js")
    @Scripts.Render("~/AdminLTE/plugins/fastclick/js")
    @Scripts.Render("~/Scripts/Shared/_Layout")
    @Scripts.Render("~/AdminLTE/dist/js")
    <script src="~/Content/js/Plugins/AjaxLoading/loading.js"></script>

    <script type="text/javascript">
        var loading = $.loading();

        $(document).ready(function () {
            //Disable full page
            $("body").on("contextmenu", function (e) {
                return false;
            });
        });

        var UserDaysForward = '@ViewBag.DaysForward';
        var UserDayBack = '@ViewBag.DaysBack';;


        $("#alert_message").fadeTo(5000, 3000).slideUp(1000, function () {
            $("alert_message").slideUp(1000);
        });


        
        //var notiItems = $('.noti-item').length;
        //$('.Noti-length').text(notiItems);



        //var sc = [{ "SectorId": "Gamma", "PCI": "503", "cellID": "52483", "stackTrace": "PING www.google.com (173.194.124.18) 56(84) bytes of data.\n64 bytes from 173.194.124.18: icmp_seq=1 ttl=56 time=52.9 ms\n\n--- www.google.com ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min\/avg\/max\/mdev = 52.914\/52.914\/52.914\/0.000 ms\n", "AngleToSite": "22.87218609926896", "testResult": "52.9", "Latitude": "31.47884212", "WCDMA_EcIo": "0", "SiteId": "A2E0029A", "LTE_RSRP": "-85", "LTE_RSRQ": "-11", "NetworkMode": "LTE", "MNC": "04", "lacID": "40009", "GSM_RxQual": "0", "LTE_RSNR": "3.0", "LTE_CQI": "0", "Band": "3", "ftpStatus": "Not Running", "TimeStamp": "2016-12-06 01:32:48:059", "GSM_RSSI": "0", "Carrier": "1632", "WCDMA_RSCP": "0", "DistanceFromSite": "8002.328277857313", "MCC": "410", "Longitude": "74.28202483", "TestType": "Ping", "LTE_RSSI": "0" }];




        //$.ajax({
        //    url: '/swi/WorkOrder/saveTestLog',
        //    type: 'POST',
        //    data: JSON.stringify(sc),
        //    dataType: 'json',
        //    contentType: 'application/json',
        //    crossDomain: true,
        //    cache: false,
        //    success: function (data) { console.log(data); }
        //});
        function ajax(url, data, type, callback) {

            var response;
            if (type == '' || type == null) {
                type = 'GET';
            }
            $.ajax({
                url: url,
                data: data,
                type: type,
                //  async: false,
                success: function (res) {
                    response = res;
                    callback(response);
                },
                error: function (err) {
                    response = res;
                    callback(response);
                    // alert(err.statusText);
                }

            });
            //   return response;
        }

        function log(data) {
            //console.log(data);
        }



    </script>
   
   
    @RenderSection("scripts", required: false)

   
</body>
</html>


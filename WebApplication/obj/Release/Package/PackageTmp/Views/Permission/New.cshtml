@using SWI.Libraries.Security.Entities

@model Sec_Permission
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}



<div class="row">
    <div class="col-md-12">
        <div class="box box-solid">
            <div class="box-header with-border">
                <h3 class="box-title">New Permission</h3>
                <a href="@Url.Action("All","Permission")" class="btn btn-sm btn-info btn-flat pull-right">Back</a>
            </div>
            <!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    <div class="col-sm-6">
                        @using (Html.BeginForm("New", "Permission", FormMethod.Post, new { Id = "frm-Permission" }))
                        {
                            @Html.HiddenFor(model => model.Id,new { Value = ViewBag.LastId })
                            <input type="hidden" name="Filter" value="@ViewBag.Filter" />
                            <div class="form-horizontal">
                                
                                <div class="form-group">
                                    @Html.Label("Module", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(m => m.ModuleId, new SelectList(ViewBag.Modules, "Value", "Text"), new { @class = "form-control select", required = "required" })

                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.Label("Parent Id", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.ParentId,null, new { @class = "form-control", Required = "Required", data_parsley_type = "number"  })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Required = "Required" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.URL, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.URL, new { htmlAttributes = new { @class = "form-control", Required = "Required" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("Key Code", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", Required = "Required" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Icon, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Icon, new { htmlAttributes = new { @class = "form-control", } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("IsMenu Item", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsMenuItem)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("IsActive", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsUsed)
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.Label("IsModule", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.CheckBoxFor(model => model.IsModule, new { @checked = "checked" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="reset" value="Reset" class="btn btn-default" />
                                        <input type="submit" value="Save" class="btn btn-success" />

                                    </div>
                                </div>
                            </div>
                        }

                    </div>
                </div>

            </div>
            <!-- /.box-body -->
        </div>
    </div>
</div>

@section scripts{
    <script src="~/Content/js/Plugins/validation/parsley.min.js"></script>

    <script>
        $(function () {
            $('#frm-Permission').parsley();
            if ($('#ParentId').val().length==0) {
                $('#ParentId').val('0');
            }
            $('#ModuleId').val('@ViewBag.ModuleId');
            $(document).on('blur', '#URL', function () {

                var value = $(this).val();
                if (value.substr(value.length - 1) == '/') {
                    $(this).val(value.substr(0, value.length - 1));
                }

                if (value.length > 3) {
                    var arr = value.split('/');
                    if (arr.length >= 3) {
                        var ControllerCode = arr[1].substring(0, 3);
                        var ActionCode = arr[2].substring(0, 3);
                        $('#Code').val(ControllerCode + ActionCode);
                    }

                }


            });
            //
        });
    </script>
}
@section style{
    <link href="~/Content/js/Plugins/validation/parsley.css" rel="stylesheet" />
}




